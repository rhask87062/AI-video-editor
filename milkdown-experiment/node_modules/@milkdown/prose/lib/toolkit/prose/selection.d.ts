import type { NodeType, Node as ProseNode, ResolvedPos } from '../../model';
import type { Selection } from '../../state';
import type { Predicate } from './types';
export interface ContentNodeWithPos {
    pos: number;
    start: number;
    depth: number;
    node: ProseNode;
}
export declare function findParentNodeClosestToPos(predicate: Predicate): ($pos: ResolvedPos) => ContentNodeWithPos | undefined;
export declare function findParentNode(predicate: Predicate): (selection: Selection) => ContentNodeWithPos | undefined;
export declare function findSelectedNodeOfType(selection: Selection, nodeType: NodeType): ContentNodeWithPos | undefined;
//# sourceMappingURL=selection.d.ts.map