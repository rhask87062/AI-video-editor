{"version":3,"file":"index.js","sources":["../src/code.ts","../src/error.ts","../src/index.ts"],"sourcesContent":["export enum ErrorCode {\n  docTypeError = 'docTypeError',\n  contextNotFound = 'contextNotFound',\n  timerNotFound = 'timerNotFound',\n  ctxCallOutOfScope = 'ctxCallOutOfScope',\n  createNodeInParserFail = 'createNodeInParserFail',\n  stackOverFlow = 'stackOverFlow',\n  parserMatchError = 'parserMatchError',\n  serializerMatchError = 'serializerMatchError',\n  getAtomFromSchemaFail = 'getAtomFromSchemaFail',\n  expectDomTypeError = 'expectDomTypeError',\n  callCommandBeforeEditorView = 'callCommandBeforeEditorView',\n  missingRootElement = 'missingRootElement',\n  missingNodeInSchema = 'missingNodeInSchema',\n  missingMarkInSchema = 'missingMarkInSchema',\n\n  // collab plugin\n  ctxNotBind = 'ctxNotBind',\n  missingYjsDoc = 'missingYjsDoc',\n}\n","import type { ErrorCode } from './code'\n\nexport class MilkdownError extends Error {\n  public code: string\n  constructor(code: ErrorCode, message: string) {\n    super(message)\n    this.name = 'MilkdownError'\n    this.code = code\n  }\n}\n","import { ErrorCode } from './code'\nimport { MilkdownError } from './error'\n\nconst functionReplacer = (_: string, value: unknown) =>\n  typeof value === 'function' ? '[Function]' : value\n\nconst stringify = (x: unknown): string => JSON.stringify(x, functionReplacer)\n\nexport function docTypeError(type: unknown) {\n  return new MilkdownError(\n    ErrorCode.docTypeError,\n    `Doc type error, unsupported type: ${stringify(type)}`\n  )\n}\n\nexport function contextNotFound(name: string) {\n  return new MilkdownError(\n    ErrorCode.contextNotFound,\n    `Context \"${name}\" not found, do you forget to inject it?`\n  )\n}\n\nexport function timerNotFound(name: string) {\n  return new MilkdownError(\n    ErrorCode.timerNotFound,\n    `Timer \"${name}\" not found, do you forget to record it?`\n  )\n}\n\nexport function ctxCallOutOfScope() {\n  return new MilkdownError(\n    ErrorCode.ctxCallOutOfScope,\n    'Should not call a context out of the plugin.'\n  )\n}\n\nexport function createNodeInParserFail(\n  nodeType: object,\n  attrs?: unknown,\n  content?: unknown[]\n) {\n  const nodeTypeName = 'name' in nodeType ? nodeType.name : nodeType\n  const heading = `Cannot create node for ${nodeTypeName}`\n  const serialize = (x: unknown): string => {\n    if (x == null) return 'null'\n\n    if (Array.isArray(x)) {\n      return `[${x.map(serialize).join(', ')}]`\n    }\n\n    if (typeof x === 'object') {\n      if ('toJSON' in x && typeof (x as any).toJSON === 'function') {\n        return JSON.stringify((x as any).toJSON())\n      }\n\n      if ('spec' in x) {\n        return JSON.stringify((x as any).spec)\n      }\n\n      return JSON.stringify(x)\n    }\n\n    if (\n      typeof x === 'string' ||\n      typeof x === 'number' ||\n      typeof x === 'boolean'\n    ) {\n      return JSON.stringify(x)\n    }\n\n    if (typeof x === 'function') {\n      return `[Function: ${(x as Function).name || 'anonymous'}]`\n    }\n\n    try {\n      return String(x)\n    } catch {\n      return '[Unserializable]'\n    }\n  }\n\n  const headingMessage = ['[Description]', heading] as const\n  const attrsMessage = ['[Attributes]', attrs] as const\n  const contentMessage = [\n    '[Content]',\n    (content ?? []).map((node) => {\n      if (!node) return 'null'\n\n      if (typeof node === 'object' && 'type' in node) {\n        return `${node}`\n      }\n\n      return serialize(node)\n    }),\n  ] as const\n\n  const messages = [headingMessage, attrsMessage, contentMessage].reduce(\n    (acc, [title, value]) => {\n      const message = `${title}: ${serialize(value)}.`\n      return acc.concat(message)\n    },\n    [] as string[]\n  )\n\n  return new MilkdownError(\n    ErrorCode.createNodeInParserFail,\n    messages.join('\\n')\n  )\n}\n\nexport function stackOverFlow() {\n  return new MilkdownError(\n    ErrorCode.stackOverFlow,\n    'Stack over flow, cannot pop on an empty stack.'\n  )\n}\n\nexport function parserMatchError(node: unknown) {\n  return new MilkdownError(\n    ErrorCode.parserMatchError,\n    `Cannot match target parser for node: ${stringify(node)}.`\n  )\n}\n\nexport function serializerMatchError(node: unknown) {\n  return new MilkdownError(\n    ErrorCode.serializerMatchError,\n    `Cannot match target serializer for node: ${stringify(node)}.`\n  )\n}\n\nexport function getAtomFromSchemaFail(type: 'mark' | 'node', name: string) {\n  return new MilkdownError(\n    ErrorCode.getAtomFromSchemaFail,\n    `Cannot get ${type}: ${name} from schema.`\n  )\n}\n\nexport function expectDomTypeError(node: unknown) {\n  return new MilkdownError(\n    ErrorCode.expectDomTypeError,\n    `Expect to be a dom, but get: ${stringify(node)}.`\n  )\n}\n\nexport function callCommandBeforeEditorView() {\n  return new MilkdownError(\n    ErrorCode.callCommandBeforeEditorView,\n    \"You're trying to call a command before editor view initialized, make sure to get commandManager from ctx after editor view has been initialized\"\n  )\n}\n\nexport function missingRootElement() {\n  return new MilkdownError(\n    ErrorCode.missingRootElement,\n    'Missing root element, milkdown cannot find root element of the editor.'\n  )\n}\n\nexport function missingNodeInSchema(name: string) {\n  return new MilkdownError(\n    ErrorCode.missingNodeInSchema,\n    `Missing node in schema, milkdown cannot find \"${name}\" in schema.`\n  )\n}\n\nexport function missingMarkInSchema(name: string) {\n  return new MilkdownError(\n    ErrorCode.missingMarkInSchema,\n    `Missing mark in schema, milkdown cannot find \"${name}\" in schema.`\n  )\n}\n\nexport function ctxNotBind() {\n  return new MilkdownError(\n    ErrorCode.ctxNotBind,\n    'Context not bind, please make sure the plugin has been initialized.'\n  )\n}\n\nexport function missingYjsDoc() {\n  return new MilkdownError(\n    ErrorCode.missingYjsDoc,\n    'Missing yjs doc, please make sure you have bind one.'\n  )\n}\n"],"names":["ErrorCode"],"mappings":"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"}