{"version":3,"file":"index.js","sources":["../../src/__internal__/meta.ts","../../src/image-block/config.ts","../../src/image-block/remark-plugin.ts","../../src/image-block/schema.ts","../../src/__internal__/components/icon.tsx","../../src/__internal__/components/image-input.tsx","../../src/image-block/view/components/image-viewer.tsx","../../src/image-block/view/components/image-block.tsx","../../src/image-block/view/index.ts","../../src/image-block/index.ts"],"sourcesContent":["import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/components',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n","import { $ctx } from '@milkdown/utils'\n\nimport { withMeta } from '../__internal__/meta'\n\nexport interface ImageBlockConfig {\n  imageIcon: () => string | undefined\n  captionIcon: () => string | undefined\n  uploadButton: () => string | undefined\n  confirmButton: () => string | undefined\n  uploadPlaceholderText: string\n  captionPlaceholderText: string\n  onUpload: (file: File) => Promise<string>\n  proxyDomURL?: (url: string) => Promise<string> | string\n}\n\nexport const defaultImageBlockConfig: ImageBlockConfig = {\n  imageIcon: () => '🌌',\n  captionIcon: () => '💬',\n  uploadButton: () => 'Upload file',\n  confirmButton: () => 'Confirm ⏎',\n  uploadPlaceholderText: 'or paste the image link ...',\n  captionPlaceholderText: 'Image caption',\n  onUpload: (file) => Promise.resolve(URL.createObjectURL(file)),\n}\n\nexport const imageBlockConfig = $ctx(\n  defaultImageBlockConfig,\n  'imageBlockConfigCtx'\n)\n\nwithMeta(imageBlockConfig, {\n  displayName: 'Config<image-block>',\n  group: 'ImageBlock',\n})\n","import type { Node } from '@milkdown/transformer'\n\nimport { $remark } from '@milkdown/utils'\nimport { visit } from 'unist-util-visit'\n\nimport { withMeta } from '../__internal__/meta'\n\nfunction visitImage(ast: Node) {\n  return visit(\n    ast,\n    'paragraph',\n    (\n      node: Node & { children?: Node[] },\n      index: number,\n      parent: Node & { children: Node[] }\n    ) => {\n      if (node.children?.length !== 1) return\n      const firstChild = node.children?.[0]\n      if (!firstChild || firstChild.type !== 'image') return\n\n      const { url, alt, title } = firstChild as Node & {\n        url: string\n        alt: string\n        title: string\n      }\n      const newNode = {\n        type: 'image-block',\n        url,\n        alt,\n        title,\n      }\n\n      parent.children.splice(index, 1, newNode)\n    }\n  )\n}\n\nexport const remarkImageBlockPlugin = $remark(\n  'remark-image-block',\n  () => () => visitImage\n)\n\nwithMeta(remarkImageBlockPlugin.plugin, {\n  displayName: 'Remark<remarkImageBlock>',\n  group: 'ImageBlock',\n})\n\nwithMeta(remarkImageBlockPlugin.options, {\n  displayName: 'RemarkConfig<remarkImageBlock>',\n  group: 'ImageBlock',\n})\n","import { expectDomTypeError } from '@milkdown/exception'\nimport { $nodeSchema } from '@milkdown/utils'\n\nimport { withMeta } from '../__internal__/meta'\n\nexport const IMAGE_DATA_TYPE = 'image-block'\n\nexport const imageBlockSchema = $nodeSchema('image-block', () => {\n  return {\n    inline: false,\n    group: 'block',\n    selectable: true,\n    draggable: true,\n    isolating: true,\n    marks: '',\n    atom: true,\n    priority: 100,\n    attrs: {\n      src: { default: '', validate: 'string' },\n      caption: { default: '', validate: 'string' },\n      ratio: { default: 1, validate: 'number' },\n    },\n    parseDOM: [\n      {\n        tag: `img[data-type=\"${IMAGE_DATA_TYPE}\"]`,\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom)\n\n          return {\n            src: dom.getAttribute('src') || '',\n            caption: dom.getAttribute('caption') || '',\n            ratio: Number(dom.getAttribute('ratio') ?? 1),\n          }\n        },\n      },\n    ],\n    toDOM: (node) => ['img', { 'data-type': IMAGE_DATA_TYPE, ...node.attrs }],\n    parseMarkdown: {\n      match: ({ type }) => type === 'image-block',\n      runner: (state, node, type) => {\n        const src = node.url as string\n        const caption = node.title as string\n        let ratio = Number((node.alt as string) || 1)\n        if (Number.isNaN(ratio) || ratio === 0) ratio = 1\n\n        state.addNode(type, {\n          src,\n          caption,\n          ratio,\n        })\n      },\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === 'image-block',\n      runner: (state, node) => {\n        state.openNode('paragraph')\n        state.addNode('image', undefined, undefined, {\n          title: node.attrs.caption,\n          url: node.attrs.src,\n          alt: `${Number.parseFloat(node.attrs.ratio).toFixed(2)}`,\n        })\n        state.closeNode()\n      },\n    },\n  }\n})\n\nwithMeta(imageBlockSchema.node, {\n  displayName: 'NodeSchema<image-block>',\n  group: 'ImageBlock',\n})\n","import clsx from 'clsx'\nimport DOMPurify from 'dompurify'\nimport { h } from 'vue'\n\nh\n\ntype IconProps = {\n  icon?: string | null\n  class?: string\n  onClick?: (event: PointerEvent) => void\n}\n\nexport function Icon({ icon, class: className, onClick }: IconProps) {\n  return (\n    <span\n      class={clsx('milkdown-icon', className)}\n      onPointerdown={onClick}\n      ref={(el) => {\n        if (el && icon) {\n          ;(el as HTMLElement).innerHTML = DOMPurify.sanitize(icon.trim())\n        }\n      }}\n    />\n  )\n}\n\nIcon.props = {\n  icon: {\n    type: String,\n    required: false,\n  },\n  class: {\n    type: String,\n    required: false,\n  },\n  onClick: {\n    type: Function,\n    required: false,\n  },\n}\n","import clsx from 'clsx'\nimport { customAlphabet } from 'nanoid'\nimport { defineComponent, ref, h, type Ref } from 'vue'\n\nimport { Icon } from './icon'\n\nh\n\nconst nanoid = customAlphabet('abcdefg', 8)\n\ntype ImageInputProps = {\n  src: Ref<string | undefined>\n  selected: Ref<boolean>\n  readonly: Ref<boolean>\n  setLink: (link: string) => void\n\n  imageIcon?: string\n  uploadButton?: string\n  confirmButton?: string\n  uploadPlaceholderText?: string\n\n  className?: string\n\n  onUpload: (file: File) => Promise<string>\n}\n\nexport const ImageInput = defineComponent<ImageInputProps>({\n  props: {\n    src: {\n      type: Object,\n      required: true,\n    },\n    selected: {\n      type: Object,\n      required: true,\n    },\n    readonly: {\n      type: Object,\n      required: true,\n    },\n    setLink: {\n      type: Function,\n      required: true,\n    },\n    imageIcon: {\n      type: String,\n      required: false,\n    },\n    uploadButton: {\n      type: String,\n      required: false,\n    },\n    confirmButton: {\n      type: String,\n      required: false,\n    },\n    uploadPlaceholderText: {\n      type: String,\n      required: false,\n    },\n    onUpload: {\n      type: Function,\n      required: true,\n    },\n  },\n  setup({\n    readonly,\n    src,\n    setLink,\n    onUpload,\n    imageIcon,\n    uploadButton,\n    confirmButton,\n    uploadPlaceholderText,\n    className,\n  }) {\n    const focusLinkInput = ref(false)\n    const linkInputRef = ref<HTMLInputElement>()\n    const currentLink = ref(src.value ?? '')\n    const uuid = ref(nanoid())\n    const hidePlaceholder = ref(src.value?.length !== 0)\n    const onEditLink = (e: Event) => {\n      const target = e.target as HTMLInputElement\n      const value = target.value\n      hidePlaceholder.value = value.length !== 0\n      currentLink.value = value\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      if (e.key === 'Enter') {\n        setLink(linkInputRef.value?.value ?? '')\n      }\n    }\n\n    const onConfirmLinkInput = () => {\n      setLink(linkInputRef.value?.value ?? '')\n    }\n\n    const onUploadFile = (e: Event) => {\n      const file = (e.target as HTMLInputElement).files?.[0]\n      if (!file) return\n\n      onUpload(file)\n        .then((url) => {\n          if (!url) return\n\n          setLink(url)\n          hidePlaceholder.value = true\n        })\n        .catch((err) => {\n          console.error('An error occurred while uploading image')\n          console.error(err)\n        })\n    }\n\n    return () => {\n      return (\n        <div class={clsx('image-edit', className)}>\n          <Icon icon={imageIcon} class=\"image-icon\" />\n          <div class={clsx('link-importer', focusLinkInput.value && 'focus')}>\n            <input\n              ref={linkInputRef}\n              draggable=\"true\"\n              onDragstart={(e) => {\n                e.preventDefault()\n                e.stopPropagation()\n              }}\n              disabled={readonly.value}\n              class=\"link-input-area\"\n              value={currentLink.value}\n              onInput={onEditLink}\n              onKeydown={onKeydown}\n              onFocus={() => (focusLinkInput.value = true)}\n              onBlur={() => (focusLinkInput.value = false)}\n            />\n            {!hidePlaceholder.value && (\n              <div class=\"placeholder\">\n                <input\n                  disabled={readonly.value}\n                  class=\"hidden\"\n                  id={uuid.value}\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={onUploadFile}\n                />\n                <label class=\"uploader\" for={uuid.value}>\n                  <Icon icon={uploadButton} />\n                </label>\n                <span class=\"text\" onClick={() => linkInputRef.value?.focus()}>\n                  {uploadPlaceholderText}\n                </span>\n              </div>\n            )}\n          </div>\n          {currentLink.value && (\n            <div class=\"confirm\" onClick={() => onConfirmLinkInput()}>\n              <Icon icon={confirmButton} />\n            </div>\n          )}\n        </div>\n      )\n    }\n  },\n})\n","import { defineComponent, ref, h, Fragment } from 'vue'\n\nimport type { MilkdownImageBlockProps } from './image-block'\n\nimport { Icon } from '../../../__internal__/components/icon'\nimport { IMAGE_DATA_TYPE } from '../../schema'\n\nh\nFragment\n\nexport const ImageViewer = defineComponent<MilkdownImageBlockProps>({\n  props: {\n    src: {\n      type: Object,\n      required: true,\n    },\n    caption: {\n      type: Object,\n      required: true,\n    },\n    ratio: {\n      type: Object,\n      required: true,\n    },\n    selected: {\n      type: Object,\n      required: true,\n    },\n    readonly: {\n      type: Object,\n      required: true,\n    },\n    setAttr: {\n      type: Function,\n      required: true,\n    },\n    config: {\n      type: Object,\n      required: true,\n    },\n  },\n  setup({ src, caption, ratio, readonly, setAttr, config }) {\n    const imageRef = ref<HTMLImageElement>()\n    const resizeHandle = ref<HTMLDivElement>()\n    const showCaption = ref(Boolean(caption.value?.length))\n    const timer = ref(0)\n\n    const onImageLoad = () => {\n      const image = imageRef.value\n      if (!image) return\n      const host = image.closest('.milkdown-image-block')\n      if (!host) return\n\n      const maxWidth = host.getBoundingClientRect().width\n      if (!maxWidth) return\n\n      const height = image.height\n      const width = image.width\n      const transformedHeight =\n        width < maxWidth ? height : maxWidth * (height / width)\n      const h = (transformedHeight * (ratio.value ?? 1)).toFixed(2)\n      image.dataset.origin = transformedHeight.toFixed(2)\n      image.dataset.height = h\n      image.style.height = `${h}px`\n    }\n\n    const onToggleCaption = (e: PointerEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      if (readonly.value) return\n      showCaption.value = !showCaption.value\n    }\n\n    const onInputCaption = (e: Event) => {\n      const target = e.target as HTMLInputElement\n      const value = target.value\n      if (timer.value) window.clearTimeout(timer.value)\n\n      timer.value = window.setTimeout(() => {\n        setAttr('caption', value)\n      }, 1000)\n    }\n\n    const onBlurCaption = (e: Event) => {\n      const target = e.target as HTMLInputElement\n      const value = target.value\n      if (timer.value) {\n        window.clearTimeout(timer.value)\n        timer.value = 0\n      }\n\n      setAttr('caption', value)\n    }\n\n    const onResizeHandlePointerMove = (e: PointerEvent) => {\n      e.preventDefault()\n      const image = imageRef.value\n      if (!image) return\n      const top = image.getBoundingClientRect().top\n      const height = e.clientY - top\n      const h = Number(height < 100 ? 100 : height).toFixed(2)\n      image.dataset.height = h\n      image.style.height = `${h}px`\n    }\n\n    const onResizeHandlePointerUp = () => {\n      window.removeEventListener('pointermove', onResizeHandlePointerMove)\n      window.removeEventListener('pointerup', onResizeHandlePointerUp)\n\n      const image = imageRef.value\n      if (!image) return\n\n      const originHeight = Number(image.dataset.origin)\n      const currentHeight = Number(image.dataset.height)\n      const ratio = Number.parseFloat(\n        Number(currentHeight / originHeight).toFixed(2)\n      )\n      if (Number.isNaN(ratio)) return\n\n      setAttr('ratio', ratio)\n    }\n\n    const onResizeHandlePointerDown = (e: PointerEvent) => {\n      if (readonly.value) return\n      e.preventDefault()\n      e.stopPropagation()\n      window.addEventListener('pointermove', onResizeHandlePointerMove)\n      window.addEventListener('pointerup', onResizeHandlePointerUp)\n    }\n\n    return () => {\n      return (\n        <>\n          <div class=\"image-wrapper\">\n            <div class=\"operation\">\n              <div class=\"operation-item\" onPointerdown={onToggleCaption}>\n                <Icon icon={config.captionIcon()} />\n              </div>\n            </div>\n            <img\n              ref={imageRef}\n              data-type={IMAGE_DATA_TYPE}\n              onLoad={onImageLoad}\n              src={src.value}\n              alt={caption.value}\n            />\n            <div\n              ref={resizeHandle}\n              class=\"image-resize-handle\"\n              onPointerdown={onResizeHandlePointerDown}\n            />\n          </div>\n          {showCaption.value && (\n            <input\n              draggable=\"true\"\n              onDragstart={(e) => {\n                e.preventDefault()\n                e.stopPropagation()\n              }}\n              class=\"caption-input\"\n              placeholder={config?.captionPlaceholderText}\n              onInput={onInputCaption}\n              onBlur={onBlurCaption}\n              value={caption.value}\n            />\n          )}\n        </>\n      )\n    }\n  },\n})\n","import { h, Fragment, type Ref, defineComponent } from 'vue'\n\nimport type { ImageBlockConfig } from '../../config'\n\nimport { ImageInput } from '../../../__internal__/components/image-input'\nimport { ImageViewer } from './image-viewer'\n\nh\nFragment\n\ntype Attrs = {\n  src: string\n  caption: string\n  ratio: number\n}\n\nexport type MilkdownImageBlockProps = {\n  selected: Ref<boolean>\n  readonly: Ref<boolean>\n  setAttr: <T extends keyof Attrs>(attr: T, value: Attrs[T]) => void\n  config: ImageBlockConfig\n} & {\n  [P in keyof Attrs]: Ref<Attrs[P] | undefined>\n}\n\nexport const MilkdownImageBlock = defineComponent<MilkdownImageBlockProps>({\n  props: {\n    src: {\n      type: Object,\n      required: true,\n    },\n    caption: {\n      type: Object,\n      required: true,\n    },\n    ratio: {\n      type: Object,\n      required: true,\n    },\n    selected: {\n      type: Object,\n      required: true,\n    },\n    readonly: {\n      type: Object,\n      required: true,\n    },\n    setAttr: {\n      type: Function,\n      required: true,\n    },\n    config: {\n      type: Object,\n      required: true,\n    },\n  },\n  setup(props) {\n    const { src } = props\n\n    return () => {\n      if (!src.value?.length) {\n        return (\n          <ImageInput\n            src={props.src}\n            selected={props.selected}\n            readonly={props.readonly}\n            setLink={(link) => props.setAttr('src', link)}\n            imageIcon={props.config.imageIcon()}\n            uploadButton={props.config.uploadButton()}\n            confirmButton={props.config.confirmButton()}\n            uploadPlaceholderText={props.config.uploadPlaceholderText}\n            onUpload={props.config.onUpload}\n          />\n        )\n      }\n      return <ImageViewer {...props} />\n    }\n  },\n})\n","import type { Node } from '@milkdown/prose/model'\nimport type { NodeViewConstructor } from '@milkdown/prose/view'\n\nimport { $view } from '@milkdown/utils'\nimport DOMPurify from 'dompurify'\nimport { createApp, ref, watchEffect } from 'vue'\n\nimport { withMeta } from '../../__internal__/meta'\nimport { imageBlockConfig } from '../config'\nimport { imageBlockSchema } from '../schema'\nimport { MilkdownImageBlock } from './components/image-block'\n\nexport const imageBlockView = $view(\n  imageBlockSchema.node,\n  (ctx): NodeViewConstructor => {\n    return (initialNode, view, getPos) => {\n      const src = ref(initialNode.attrs.src)\n      const caption = ref(initialNode.attrs.caption)\n      const ratio = ref(initialNode.attrs.ratio)\n      const selected = ref(false)\n      const readonly = ref(!view.editable)\n      const setAttr = (attr: string, value: unknown) => {\n        if (!view.editable) return\n        const pos = getPos()\n        if (pos == null) return\n        view.dispatch(\n          view.state.tr.setNodeAttribute(\n            pos,\n            attr,\n            attr === 'src' ? DOMPurify.sanitize(value as string) : value\n          )\n        )\n      }\n      const config = ctx.get(imageBlockConfig.key)\n      const app = createApp(MilkdownImageBlock, {\n        src,\n        caption,\n        ratio,\n        selected,\n        readonly,\n        setAttr,\n        config,\n      })\n      const dom = document.createElement('div')\n      dom.className = 'milkdown-image-block'\n      app.mount(dom)\n      const disposeSelectedWatcher = watchEffect(() => {\n        const isSelected = selected.value\n        if (isSelected) {\n          dom.classList.add('selected')\n        } else {\n          dom.classList.remove('selected')\n        }\n      })\n      const proxyDomURL = config.proxyDomURL\n      const bindAttrs = (node: Node) => {\n        if (!proxyDomURL) {\n          src.value = node.attrs.src\n        } else {\n          const proxiedURL = proxyDomURL(node.attrs.src)\n          if (typeof proxiedURL === 'string') {\n            src.value = proxiedURL\n          } else {\n            proxiedURL\n              .then((url) => {\n                src.value = url\n              })\n              .catch(console.error)\n          }\n        }\n        ratio.value = node.attrs.ratio\n        caption.value = node.attrs.caption\n\n        readonly.value = !view.editable\n      }\n\n      bindAttrs(initialNode)\n      return {\n        dom,\n        update: (updatedNode) => {\n          if (updatedNode.type !== initialNode.type) return false\n\n          bindAttrs(updatedNode)\n          return true\n        },\n        stopEvent: (e) => {\n          if (e.target instanceof HTMLInputElement) return true\n\n          return false\n        },\n        selectNode: () => {\n          selected.value = true\n        },\n        deselectNode: () => {\n          selected.value = false\n        },\n        destroy: () => {\n          disposeSelectedWatcher()\n          app.unmount()\n          dom.remove()\n        },\n      }\n    }\n  }\n)\n\nwithMeta(imageBlockView, {\n  displayName: 'NodeView<image-block>',\n  group: 'ImageBlock',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\n\nimport { imageBlockConfig } from './config'\nimport { remarkImageBlockPlugin } from './remark-plugin'\nimport { imageBlockSchema } from './schema'\nimport { imageBlockView } from './view'\n\nexport * from './schema'\nexport * from './remark-plugin'\nexport * from './config'\nexport * from './view'\n\nexport const imageBlockComponent: MilkdownPlugin[] = [\n  remarkImageBlockPlugin,\n  imageBlockSchema,\n  imageBlockView,\n  imageBlockConfig,\n].flat()\n"],"names":["__spreadValues","_a","_b","h","ratio"],"mappings":"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"}