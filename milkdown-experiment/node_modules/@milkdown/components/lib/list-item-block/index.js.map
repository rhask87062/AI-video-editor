{"version":3,"file":"index.js","sources":["../../src/__internal__/meta.ts","../../src/list-item-block/config.ts","../../src/__internal__/components/icon.tsx","../../src/list-item-block/component.tsx","../../src/list-item-block/view.ts","../../src/list-item-block/index.ts"],"sourcesContent":["import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/components',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n","import { $ctx } from '@milkdown/utils'\n\nimport { withMeta } from '../__internal__/meta'\n\ninterface RenderLabelProps {\n  label: string\n  listType: string\n  readonly?: boolean\n  checked?: boolean\n}\n\nexport interface ListItemBlockConfig {\n  renderLabel: (props: RenderLabelProps) => string\n}\n\nexport const defaultListItemBlockConfig: ListItemBlockConfig = {\n  renderLabel: ({ label, listType, checked }: RenderLabelProps) => {\n    const content =\n      checked == null\n        ? listType === 'bullet'\n          ? '⦿'\n          : label\n        : checked\n          ? '☑'\n          : '□'\n\n    return content\n  },\n}\n\nexport const listItemBlockConfig = $ctx(\n  defaultListItemBlockConfig,\n  'listItemBlockConfigCtx'\n)\n\nwithMeta(listItemBlockConfig, {\n  displayName: 'Config<list-item-block>',\n  group: 'ListItemBlock',\n})\n","import clsx from 'clsx'\nimport DOMPurify from 'dompurify'\nimport { h } from 'vue'\n\nh\n\ntype IconProps = {\n  icon?: string | null\n  class?: string\n  onClick?: (event: PointerEvent) => void\n}\n\nexport function Icon({ icon, class: className, onClick }: IconProps) {\n  return (\n    <span\n      class={clsx('milkdown-icon', className)}\n      onPointerdown={onClick}\n      ref={(el) => {\n        if (el && icon) {\n          ;(el as HTMLElement).innerHTML = DOMPurify.sanitize(icon.trim())\n        }\n      }}\n    />\n  )\n}\n\nIcon.props = {\n  icon: {\n    type: String,\n    required: false,\n  },\n  class: {\n    type: String,\n    required: false,\n  },\n  onClick: {\n    type: Function,\n    required: false,\n  },\n}\n","import clsx from 'clsx'\nimport { computed, defineComponent, type Ref, h, type VNodeRef } from 'vue'\n\nimport type { ListItemBlockConfig } from './config'\n\nimport { Icon } from '../__internal__/components/icon'\n\nh\n\ninterface Attrs {\n  label: string\n  checked: boolean\n  listType: string\n}\n\ntype ListItemProps = {\n  [P in keyof Attrs]: Ref<Attrs[P]>\n} & {\n  config: ListItemBlockConfig\n  readonly: Ref<boolean>\n  selected: Ref<boolean>\n  setAttr: <T extends keyof Attrs>(attr: T, value: Attrs[T]) => void\n  onMount: (div: Element) => void\n}\n\nexport const ListItem = defineComponent<ListItemProps>({\n  props: {\n    label: {\n      type: Object,\n      required: true,\n    },\n    checked: {\n      type: Object,\n      required: true,\n    },\n    listType: {\n      type: Object,\n      required: true,\n    },\n    config: {\n      type: Object,\n      required: true,\n    },\n    readonly: {\n      type: Object,\n      required: true,\n    },\n    selected: {\n      type: Object,\n      required: true,\n    },\n    setAttr: {\n      type: Function,\n      required: true,\n    },\n    onMount: {\n      type: Function,\n      required: true,\n    },\n  },\n  setup({\n    label,\n    checked,\n    listType,\n    config,\n    readonly,\n    setAttr,\n    onMount,\n    selected,\n  }) {\n    const contentWrapperRef: VNodeRef = (div) => {\n      if (div == null) return\n      if (div instanceof Element) {\n        onMount(div)\n      }\n    }\n\n    const onClickLabel = (e: Event) => {\n      e.stopPropagation()\n      e.preventDefault()\n\n      if (checked.value == null) return\n      setAttr('checked', !checked.value)\n    }\n\n    const icon = computed(() => {\n      return config.renderLabel({\n        label: label.value,\n        listType: listType.value,\n        checked: checked.value,\n        readonly: readonly.value,\n      })\n    })\n\n    const labelClass = computed(() => {\n      if (checked.value == null) {\n        if (listType.value === 'bullet') return 'bullet'\n        return 'ordered'\n      }\n\n      if (checked.value) return 'checked'\n      return 'unchecked'\n    })\n\n    return () => {\n      return (\n        <li\n          class={clsx(\n            'list-item',\n            selected.value && 'ProseMirror-selectednode'\n          )}\n        >\n          <div\n            class=\"label-wrapper\"\n            onPointerdown={onClickLabel}\n            contenteditable={false}\n          >\n            <Icon\n              class={clsx(\n                'label',\n                readonly.value && 'readonly',\n                labelClass.value\n              )}\n              icon={icon.value}\n            />\n          </div>\n          <div class=\"children\" ref={contentWrapperRef} />\n        </li>\n      )\n    }\n  },\n})\n","import type { Node } from '@milkdown/prose/model'\nimport type { NodeViewConstructor } from '@milkdown/prose/view'\n\nimport { listItemSchema } from '@milkdown/preset-commonmark'\nimport { TextSelection } from '@milkdown/prose/state'\nimport { $view } from '@milkdown/utils'\nimport { createApp, ref, watchEffect } from 'vue'\n\nimport { withMeta } from '../__internal__/meta'\nimport { ListItem } from './component'\nimport { listItemBlockConfig } from './config'\n\nexport const listItemBlockView = $view(\n  listItemSchema.node,\n  (ctx): NodeViewConstructor => {\n    return (initialNode, view, getPos) => {\n      const dom = document.createElement('div')\n      dom.className = 'milkdown-list-item-block'\n\n      const contentDOM = document.createElement('div')\n      contentDOM.setAttribute('data-content-dom', 'true')\n      contentDOM.classList.add('content-dom')\n\n      const label = ref(initialNode.attrs.label)\n      const checked = ref(initialNode.attrs.checked)\n      const listType = ref(initialNode.attrs.listType)\n      const readonly = ref(!view.editable)\n      const config = ctx.get(listItemBlockConfig.key)\n      const selected = ref(false)\n      const setAttr = (attr: string, value: unknown) => {\n        if (!view.editable) return\n        const pos = getPos()\n        if (pos == null) return\n        view.dispatch(view.state.tr.setNodeAttribute(pos, attr, value))\n      }\n      const disposeSelectedWatcher = watchEffect(() => {\n        const isSelected = selected.value\n        if (isSelected) {\n          dom.classList.add('selected')\n        } else {\n          dom.classList.remove('selected')\n        }\n      })\n      const onMount = (div: HTMLElement) => {\n        const { anchor, head } = view.state.selection\n        div.appendChild(contentDOM)\n        // put the cursor to the new created list item\n        requestAnimationFrame(() => {\n          const anchorPos = view.state.doc.resolve(anchor)\n          const headPos = view.state.doc.resolve(head)\n          view.dispatch(\n            view.state.tr.setSelection(new TextSelection(anchorPos, headPos))\n          )\n        })\n      }\n\n      const app = createApp(ListItem, {\n        label,\n        checked,\n        listType,\n        readonly,\n        config,\n        selected,\n        setAttr,\n        onMount,\n      })\n      app.mount(dom)\n      const bindAttrs = (node: Node) => {\n        listType.value = node.attrs.listType\n        label.value = node.attrs.label\n        checked.value = node.attrs.checked\n        readonly.value = !view.editable\n      }\n\n      bindAttrs(initialNode)\n      let node = initialNode\n      return {\n        dom,\n        contentDOM,\n        update: (updatedNode) => {\n          if (updatedNode.type !== initialNode.type) return false\n\n          if (\n            updatedNode.sameMarkup(node) &&\n            updatedNode.content.eq(node.content)\n          )\n            return true\n\n          node = updatedNode\n          bindAttrs(updatedNode)\n          return true\n        },\n        ignoreMutation: (mutation) => {\n          if (!dom || !contentDOM) return true\n\n          if ((mutation.type as unknown) === 'selection') return false\n\n          if (contentDOM === mutation.target && mutation.type === 'attributes')\n            return true\n\n          if (contentDOM.contains(mutation.target)) return false\n\n          return true\n        },\n        selectNode: () => {\n          selected.value = true\n        },\n        deselectNode: () => {\n          selected.value = false\n        },\n        destroy: () => {\n          disposeSelectedWatcher()\n          app.unmount()\n          dom.remove()\n          contentDOM.remove()\n        },\n      }\n    }\n  }\n)\n\nwithMeta(listItemBlockView, {\n  displayName: 'NodeView<list-item-block>',\n  group: 'ListItemBlock',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\n\nimport { listItemBlockConfig } from './config'\nimport { listItemBlockView } from './view'\n\nexport * from './component'\nexport * from './config'\nexport * from './view'\n\nexport const listItemBlockComponent: MilkdownPlugin[] = [\n  listItemBlockConfig,\n  listItemBlockView,\n]\n"],"names":["node"],"mappings":"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"}