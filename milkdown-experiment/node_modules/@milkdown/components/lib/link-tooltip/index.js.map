{"version":3,"file":"index.js","sources":["../../src/__internal__/meta.ts","../../src/link-tooltip/slices.ts","../../src/link-tooltip/tooltips.ts","../../src/__internal__/components/icon.tsx","../../src/link-tooltip/edit/component.tsx","../../src/link-tooltip/edit/edit-view.ts","../../src/link-tooltip/edit/edit-configure.ts","../../src/link-tooltip/utils.ts","../../src/link-tooltip/preview/component.tsx","../../src/link-tooltip/preview/preview-view.ts","../../src/link-tooltip/preview/preview-configure.ts","../../src/link-tooltip/configure.ts","../../src/link-tooltip/index.ts"],"sourcesContent":["import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/components',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n","import type { Mark } from '@milkdown/prose/model'\n\nimport { $ctx } from '@milkdown/utils'\n\nimport { withMeta } from '../__internal__/meta'\n\nexport interface LinkToolTipState {\n  mode: 'preview' | 'edit'\n}\n\nconst defaultState: LinkToolTipState = {\n  mode: 'preview',\n}\n\nexport const linkTooltipState = $ctx({ ...defaultState }, 'linkTooltipStateCtx')\n\nwithMeta(linkTooltipState, {\n  displayName: 'State<link-tooltip>',\n  group: 'LinkTooltip',\n})\n\nexport interface LinkTooltipAPI {\n  addLink: (from: number, to: number) => void\n  editLink: (mark: Mark, from: number, to: number) => void\n  removeLink: (from: number, to: number) => void\n}\n\nconst defaultAPI: LinkTooltipAPI = {\n  addLink: () => {},\n  editLink: () => {},\n  removeLink: () => {},\n}\n\nexport const linkTooltipAPI = $ctx({ ...defaultAPI }, 'linkTooltipAPICtx')\n\nwithMeta(linkTooltipState, {\n  displayName: 'API<link-tooltip>',\n  group: 'LinkTooltip',\n})\n\nexport interface LinkTooltipConfig {\n  linkIcon: () => string\n  editButton: () => string\n  confirmButton: () => string\n  removeButton: () => string\n  onCopyLink: (link: string) => void\n  inputPlaceholder: string\n}\n\nconst defaultConfig: LinkTooltipConfig = {\n  linkIcon: () => '🔗',\n  editButton: () => '✎',\n  removeButton: () => '⌫',\n  confirmButton: () => 'Confirm ⏎',\n  onCopyLink: () => {},\n  inputPlaceholder: 'Paste link...',\n}\n\nexport const linkTooltipConfig = $ctx(\n  {\n    ...defaultConfig,\n  },\n  'linkTooltipConfigCtx'\n)\n\nwithMeta(linkTooltipState, {\n  displayName: 'Config<link-tooltip>',\n  group: 'LinkTooltip',\n})\n","import { tooltipFactory } from '@milkdown/plugin-tooltip'\n\nimport { withMeta } from '../__internal__/meta'\n\nexport const linkPreviewTooltip = tooltipFactory('LINK_PREVIEW')\nwithMeta(linkPreviewTooltip[0], {\n  displayName: 'PreviewTooltipSpec<link-tooltip>',\n  group: 'LinkTooltip',\n})\nwithMeta(linkPreviewTooltip[1], {\n  displayName: 'PreviewTooltipPlugin<link-tooltip>',\n  group: 'LinkTooltip',\n})\nexport const linkEditTooltip = tooltipFactory('LINK_EDIT')\nwithMeta(linkEditTooltip[0], {\n  displayName: 'EditTooltipSpec<link-tooltip>',\n  group: 'LinkTooltip',\n})\nwithMeta(linkEditTooltip[1], {\n  displayName: 'EditTooltipPlugin<link-tooltip>',\n  group: 'LinkTooltip',\n})\n","import clsx from 'clsx'\nimport DOMPurify from 'dompurify'\nimport { h } from 'vue'\n\nh\n\ntype IconProps = {\n  icon?: string | null\n  class?: string\n  onClick?: (event: PointerEvent) => void\n}\n\nexport function Icon({ icon, class: className, onClick }: IconProps) {\n  return (\n    <span\n      class={clsx('milkdown-icon', className)}\n      onPointerdown={onClick}\n      ref={(el) => {\n        if (el && icon) {\n          ;(el as HTMLElement).innerHTML = DOMPurify.sanitize(icon.trim())\n        }\n      }}\n    />\n  )\n}\n\nIcon.props = {\n  icon: {\n    type: String,\n    required: false,\n  },\n  class: {\n    type: String,\n    required: false,\n  },\n  onClick: {\n    type: Function,\n    required: false,\n  },\n}\n","import { defineComponent, ref, watch, type Ref, h } from 'vue'\n\nimport type { LinkTooltipConfig } from '../slices'\n\nimport { Icon } from '../../__internal__/components/icon'\n\nh\n\ntype EditLinkProps = {\n  config: Ref<LinkTooltipConfig>\n  src: Ref<string>\n  onConfirm: (href: string) => void\n  onCancel: () => void\n}\n\nexport const EditLink = defineComponent<EditLinkProps>({\n  props: {\n    config: {\n      type: Object,\n      required: true,\n    },\n    src: {\n      type: Object,\n      required: true,\n    },\n    onConfirm: {\n      type: Function,\n      required: true,\n    },\n    onCancel: {\n      type: Function,\n      required: true,\n    },\n  },\n  setup({ config, src, onConfirm, onCancel }) {\n    const link = ref(src)\n\n    watch(src, (value) => {\n      link.value = value\n    })\n\n    const onConfirmEdit = () => {\n      onConfirm(link.value)\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      e.stopPropagation()\n      if (e.key === 'Enter') {\n        e.preventDefault()\n        onConfirmEdit()\n      }\n      if (e.key === 'Escape') {\n        e.preventDefault()\n        onCancel()\n      }\n    }\n\n    return () => {\n      return (\n        <div class=\"link-edit\">\n          <input\n            class=\"input-area\"\n            placeholder={config.value.inputPlaceholder}\n            onKeydown={onKeydown}\n            onInput={(e: Event) => {\n              link.value = (e.target as HTMLInputElement).value\n            }}\n            value={link.value}\n          />\n          {link.value ? (\n            <Icon\n              class=\"button confirm\"\n              icon={config.value.confirmButton()}\n              onClick={onConfirmEdit}\n            />\n          ) : null}\n        </div>\n      )\n    }\n  },\n})\n","import type { Ctx } from '@milkdown/ctx'\nimport type { Mark } from '@milkdown/prose/model'\nimport type { PluginView } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\n\nimport { editorViewCtx } from '@milkdown/core'\nimport { TooltipProvider } from '@milkdown/plugin-tooltip'\nimport { linkSchema } from '@milkdown/preset-commonmark'\nimport { posToDOMRect } from '@milkdown/prose'\nimport { TextSelection } from '@milkdown/prose/state'\nimport DOMPurify from 'dompurify'\nimport { createApp, ref, type App, type Ref } from 'vue'\n\nimport {\n  linkTooltipConfig,\n  linkTooltipState,\n  type LinkTooltipConfig,\n} from '../slices'\nimport { EditLink } from './component'\n\ninterface Data {\n  from: number\n  to: number\n  mark: Mark | null\n}\n\nconst defaultData: Data = {\n  from: -1,\n  to: -1,\n  mark: null,\n}\n\nexport class LinkEditTooltip implements PluginView {\n  #content: HTMLElement\n  #provider: TooltipProvider\n  #data: Data = { ...defaultData }\n  #app: App\n  #config: Ref<LinkTooltipConfig>\n  #src = ref('')\n\n  constructor(\n    readonly ctx: Ctx,\n    view: EditorView\n  ) {\n    this.#config = ref(this.ctx.get(linkTooltipConfig.key))\n\n    const content = document.createElement('div')\n    content.className = 'milkdown-link-edit'\n\n    const app = createApp(EditLink, {\n      config: this.#config,\n      src: this.#src,\n      onConfirm: this.#confirmEdit,\n      onCancel: this.#reset,\n    })\n    app.mount(content)\n    this.#app = app\n\n    this.#content = content\n    this.#provider = new TooltipProvider({\n      content,\n      debounce: 0,\n      shouldShow: () => false,\n    })\n    this.#provider.onHide = () => {\n      requestAnimationFrame(() => {\n        view.dom.focus({ preventScroll: true })\n      })\n    }\n    this.#provider.update(view)\n  }\n\n  #reset = () => {\n    this.#provider.hide()\n    this.ctx.update(linkTooltipState.key, (state) => ({\n      ...state,\n      mode: 'preview' as const,\n    }))\n    this.#data = { ...defaultData }\n  }\n\n  #confirmEdit = (href: string) => {\n    const view = this.ctx.get(editorViewCtx)\n    const { from, to, mark } = this.#data\n    const type = linkSchema.type(this.ctx)\n    const link = DOMPurify.sanitize(href)\n    if (mark && mark.attrs.href === link) {\n      this.#reset()\n      return\n    }\n\n    const tr = view.state.tr\n    if (mark) tr.removeMark(from, to, mark)\n\n    tr.addMark(from, to, type.create({ href: link }))\n    view.dispatch(tr)\n\n    this.#reset()\n  }\n\n  #enterEditMode = (value: string, from: number, to: number) => {\n    const config = this.ctx.get(linkTooltipConfig.key)\n    this.#config.value = config\n    this.#src.value = value\n    this.ctx.update(linkTooltipState.key, (state) => ({\n      ...state,\n      mode: 'edit' as const,\n    }))\n    const view = this.ctx.get(editorViewCtx)\n    view.dispatch(\n      view.state.tr.setSelection(TextSelection.create(view.state.doc, from, to))\n    )\n    this.#provider.show({\n      getBoundingClientRect: () => posToDOMRect(view, from, to),\n    })\n    requestAnimationFrame(() => {\n      this.#content.querySelector('input')?.focus()\n    })\n  }\n\n  update = (view: EditorView) => {\n    const { state } = view\n    const { selection } = state\n    if (!(selection instanceof TextSelection)) return\n    const { from, to } = selection\n    if (from === this.#data.from && to === this.#data.to) return\n\n    this.#reset()\n  }\n\n  destroy = () => {\n    this.#app.unmount()\n    this.#provider.destroy()\n    this.#content.remove()\n  }\n\n  addLink = (from: number, to: number) => {\n    this.#data = {\n      from,\n      to,\n      mark: null,\n    }\n    this.#enterEditMode('', from, to)\n  }\n\n  editLink = (mark: Mark, from: number, to: number) => {\n    this.#data = {\n      from,\n      to,\n      mark,\n    }\n    this.#enterEditMode(mark.attrs.href, from, to)\n  }\n\n  removeLink = (from: number, to: number) => {\n    const view = this.ctx.get(editorViewCtx)\n\n    const tr = view.state.tr\n    tr.removeMark(from, to, linkSchema.type(this.ctx))\n    view.dispatch(tr)\n\n    this.#reset()\n  }\n}\n","import type { Ctx } from '@milkdown/ctx'\n\nimport { linkTooltipAPI } from '../slices'\nimport { linkEditTooltip } from '../tooltips'\nimport { LinkEditTooltip } from './edit-view'\n\nexport function configureLinkEditTooltip(ctx: Ctx) {\n  let linkEditTooltipView: LinkEditTooltip | null\n\n  ctx.update(linkTooltipAPI.key, (api) => ({\n    ...api,\n    addLink: (from, to) => {\n      linkEditTooltipView?.addLink(from, to)\n    },\n    editLink: (mark, from, to) => {\n      linkEditTooltipView?.editLink(mark, from, to)\n    },\n    removeLink: (from, to) => {\n      linkEditTooltipView?.removeLink(from, to)\n    },\n  }))\n\n  ctx.set(linkEditTooltip.key, {\n    view: (view) => {\n      linkEditTooltipView = new LinkEditTooltip(ctx, view)\n      return linkEditTooltipView\n    },\n  })\n}\n","import type { Ctx } from '@milkdown/ctx'\nimport type { Mark, Node } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\n\nimport { linkSchema } from '@milkdown/preset-commonmark'\n\nimport { linkPreviewTooltip } from './tooltips'\n\nexport function findMarkPosition(\n  mark: Mark,\n  node: Node,\n  doc: Node,\n  from: number,\n  to: number\n) {\n  let markPos = { start: -1, end: -1 }\n  doc.nodesBetween(from, to, (n, pos) => {\n    // stop recursive finding if result is found\n    if (markPos.start > -1) return false\n\n    if (markPos.start === -1 && mark.isInSet(n.marks) && node === n) {\n      markPos = {\n        start: pos,\n        end: pos + Math.max(n.textContent.length, 1),\n      }\n    }\n\n    return undefined\n  })\n\n  return markPos\n}\n\nexport function shouldShowPreviewWhenHover(\n  ctx: Ctx,\n  view: EditorView,\n  event: MouseEvent\n) {\n  const $pos = view.posAtCoords({ left: event.clientX, top: event.clientY })\n  if (!$pos) return\n\n  const { pos } = $pos\n  const node = view.state.doc.nodeAt(pos)\n\n  if (!node) return\n\n  const mark = node.marks.find(\n    (mark) => mark.type === linkSchema.mark.type(ctx)\n  )\n  if (!mark) return\n\n  const key = linkPreviewTooltip.pluginKey()\n  if (!key) return\n\n  return { show: true, pos, node, mark }\n}\n","import { defineComponent, type Ref, h } from 'vue'\n\nimport type { LinkTooltipConfig } from '../slices'\n\nimport { Icon } from '../../__internal__/components/icon'\n\ntype PreviewLinkProps = {\n  config: Ref<LinkTooltipConfig>\n  src: Ref<string>\n  onEdit: Ref<() => void>\n  onRemove: Ref<() => void>\n}\n\nh\n\nexport const PreviewLink = defineComponent<PreviewLinkProps>({\n  props: {\n    config: {\n      type: Object,\n      required: true,\n    },\n    src: {\n      type: Object,\n      required: true,\n    },\n    onEdit: {\n      type: Object,\n      required: true,\n    },\n    onRemove: {\n      type: Object,\n      required: true,\n    },\n  },\n  setup({ config, src, onEdit, onRemove }) {\n    const onClickEditButton = (e: Event) => {\n      e.preventDefault()\n      e.stopPropagation()\n      onEdit.value()\n    }\n\n    const onClickRemoveButton = (e: Event) => {\n      e.preventDefault()\n      e.stopPropagation()\n      onRemove.value()\n    }\n\n    const onClickPreview = (e: Event) => {\n      e.preventDefault()\n      const link = src.value\n      if (navigator.clipboard && link) {\n        navigator.clipboard\n          .writeText(link)\n          .then(() => {\n            config.value.onCopyLink(link)\n          })\n          .catch((e) => console.error(e))\n      }\n    }\n\n    return () => {\n      return (\n        <div class=\"link-preview\" onPointerdown={onClickPreview}>\n          <Icon class=\"link-icon\" icon={config.value.linkIcon()} />\n          <a href={src.value} target=\"_blank\" class=\"link-display\">\n            {src.value}\n          </a>\n          <Icon\n            class=\"button link-edit-button\"\n            icon={config.value.editButton()}\n            onClick={onClickEditButton}\n          />\n          <Icon\n            class=\"button link-remove-button\"\n            icon={config.value.removeButton()}\n            onClick={onClickRemoveButton}\n          />\n        </div>\n      )\n    }\n  },\n})\n","import type { Ctx, Slice } from '@milkdown/ctx'\nimport type { Mark } from '@milkdown/prose/model'\nimport type { PluginView } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\n\nimport { TooltipProvider } from '@milkdown/plugin-tooltip'\nimport { createApp, ref, type App, type Ref } from 'vue'\n\nimport type { LinkTooltipConfig, LinkToolTipState } from '../slices'\n\nimport { linkTooltipAPI, linkTooltipConfig, linkTooltipState } from '../slices'\nimport { PreviewLink } from './component'\n\nexport class LinkPreviewTooltip implements PluginView {\n  #content: HTMLElement\n  #provider: TooltipProvider\n  #slice: Slice<LinkToolTipState> = this.ctx.use(linkTooltipState.key)\n  #config: Ref<LinkTooltipConfig>\n  #src = ref('')\n  #onEdit = ref(() => {})\n  #onRemove = ref(() => {})\n  #app: App\n\n  #hovering = false\n\n  constructor(\n    readonly ctx: Ctx,\n    view: EditorView\n  ) {\n    this.#config = ref(this.ctx.get(linkTooltipConfig.key))\n    this.#app = createApp(PreviewLink, {\n      config: this.#config,\n      src: this.#src,\n      onEdit: this.#onEdit,\n      onRemove: this.#onRemove,\n    })\n    this.#content = document.createElement('div')\n    this.#content.className = 'milkdown-link-preview'\n    this.#app.mount(this.#content)\n\n    this.#provider = new TooltipProvider({\n      debounce: 0,\n      content: this.#content,\n      shouldShow: () => false,\n    })\n    this.#provider.update(view)\n    this.#slice = ctx.use(linkTooltipState.key)\n    this.#slice.on(this.#onStateChange)\n  }\n\n  #onStateChange = ({ mode }: LinkToolTipState) => {\n    if (mode === 'edit') this.#hide()\n  }\n\n  #onMouseEnter = () => {\n    this.#hovering = true\n  }\n\n  #onMouseLeave = () => {\n    this.#hovering = false\n  }\n\n  #hide = () => {\n    this.#provider.hide()\n    this.#provider.element.removeEventListener('mouseenter', this.#onMouseEnter)\n    this.#provider.element.removeEventListener('mouseleave', this.#onMouseLeave)\n  }\n\n  show = (mark: Mark, from: number, to: number, rect: DOMRect) => {\n    this.#config.value = this.ctx.get(linkTooltipConfig.key)\n    this.#src.value = mark.attrs.href\n    this.#onEdit.value = () => {\n      this.ctx.get(linkTooltipAPI.key).editLink(mark, from, to)\n    }\n    this.#onRemove.value = () => {\n      this.ctx.get(linkTooltipAPI.key).removeLink(from, to)\n      this.#hide()\n    }\n\n    this.#provider.show({\n      getBoundingClientRect: () => rect,\n    })\n    this.#provider.element.addEventListener('mouseenter', this.#onMouseEnter)\n    this.#provider.element.addEventListener('mouseleave', this.#onMouseLeave)\n  }\n\n  hide = () => {\n    if (this.#hovering) return\n\n    this.#hide()\n  }\n\n  update = () => {}\n\n  destroy = () => {\n    this.#app.unmount()\n    this.#slice.off(this.#onStateChange)\n    this.#provider.destroy()\n    this.#content.remove()\n  }\n}\n","import type { Ctx } from '@milkdown/ctx'\nimport type { EditorView } from '@milkdown/prose/view'\n\nimport { posToDOMRect } from '@milkdown/prose'\nimport debounce from 'lodash.debounce'\n\nimport { linkTooltipState } from '../slices'\nimport { linkPreviewTooltip } from '../tooltips'\nimport { findMarkPosition, shouldShowPreviewWhenHover } from '../utils'\nimport { LinkPreviewTooltip } from './preview-view'\n\nexport function configureLinkPreviewTooltip(ctx: Ctx) {\n  let linkPreviewTooltipView: LinkPreviewTooltip | null\n\n  const DELAY = 200\n  const onMouseMove = debounce((view: EditorView, event: MouseEvent) => {\n    if (!linkPreviewTooltipView) return\n    if (!view.hasFocus()) return\n\n    const state = ctx.get(linkTooltipState.key)\n    if (state.mode === 'edit') return\n\n    const result = shouldShowPreviewWhenHover(ctx, view, event)\n    if (result) {\n      const position = view.state.doc.resolve(result.pos)\n      const markPosition = findMarkPosition(\n        result.mark,\n        result.node,\n        view.state.doc,\n        position.before(),\n        position.after()\n      )\n      const from = markPosition.start\n      const to = markPosition.end\n      linkPreviewTooltipView.show(\n        result.mark,\n        from,\n        to,\n        posToDOMRect(view, from, to)\n      )\n      return\n    }\n\n    linkPreviewTooltipView.hide()\n  }, DELAY)\n\n  const onMouseLeave = () => {\n    setTimeout(() => {\n      linkPreviewTooltipView?.hide()\n    }, DELAY)\n  }\n\n  ctx.set(linkPreviewTooltip.key, {\n    props: {\n      handleDOMEvents: {\n        mousemove: onMouseMove,\n        mouseleave: onMouseLeave,\n      },\n    },\n    view: (view) => {\n      linkPreviewTooltipView = new LinkPreviewTooltip(ctx, view)\n      return linkPreviewTooltipView\n    },\n  })\n}\n","import type { Ctx } from '@milkdown/ctx'\n\nimport { configureLinkEditTooltip } from './edit/edit-configure'\nimport { configureLinkPreviewTooltip } from './preview/preview-configure'\n\nexport function configureLinkTooltip(ctx: Ctx) {\n  configureLinkPreviewTooltip(ctx)\n  configureLinkEditTooltip(ctx)\n}\n","import type { MilkdownPlugin } from '@milkdown/ctx'\n\nimport { linkTooltipAPI, linkTooltipConfig, linkTooltipState } from './slices'\nimport { linkEditTooltip, linkPreviewTooltip } from './tooltips'\n\nexport * from './slices'\nexport * from './configure'\nexport * from './tooltips'\n\nexport const linkTooltipPlugin: MilkdownPlugin[] = [\n  linkTooltipState,\n  linkTooltipAPI,\n  linkTooltipConfig,\n  linkPreviewTooltip,\n  linkEditTooltip,\n].flat()\n"],"names":["__spreadValues","_content","_provider","_app","_config","_src","__privateAdd","__privateGet","__spreadProps","__privateSet","mark","e"],"mappings":"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"}