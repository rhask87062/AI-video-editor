{"version":3,"file":"index-CAdCl6lx.js","sources":["../../src/icons/bullet-list.ts","../../src/icons/divider.ts","../../src/icons/h1.ts","../../src/icons/h2.ts","../../src/icons/h3.ts","../../src/icons/h4.ts","../../src/icons/h5.ts","../../src/icons/h6.ts","../../src/icons/menu.ts","../../src/icons/ordered-list.ts","../../src/icons/quote.ts","../../src/icons/table.ts","../../src/icons/text.ts","../../src/icons/todo-list.ts","../../src/feature/block-edit/menu/group-builder.ts","../../src/feature/block-edit/menu/utils.ts","../../src/feature/block-edit/menu/config.ts","../../src/feature/block-edit/menu/component.tsx","../../src/feature/block-edit/menu/index.ts","../../src/feature/block-edit/handle/component.tsx","../../src/feature/block-edit/handle/index.ts","../../src/feature/block-edit/index.ts"],"sourcesContent":["export const bulletListIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_8070)\">\n      <path\n        d=\"M4 10.5C3.17 10.5 2.5 11.17 2.5 12C2.5 12.83 3.17 13.5 4 13.5C4.83 13.5 5.5 12.83 5.5 12C5.5 11.17 4.83 10.5 4 10.5ZM4 4.5C3.17 4.5 2.5 5.17 2.5 6C2.5 6.83 3.17 7.5 4 7.5C4.83 7.5 5.5 6.83 5.5 6C5.5 5.17 4.83 4.5 4 4.5ZM4 16.5C3.17 16.5 2.5 17.18 2.5 18C2.5 18.82 3.18 19.5 4 19.5C4.82 19.5 5.5 18.82 5.5 18C5.5 17.18 4.83 16.5 4 16.5ZM8 19H20C20.55 19 21 18.55 21 18C21 17.45 20.55 17 20 17H8C7.45 17 7 17.45 7 18C7 18.55 7.45 19 8 19ZM8 13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11H8C7.45 11 7 11.45 7 12C7 12.55 7.45 13 8 13ZM7 6C7 6.55 7.45 7 8 7H20C20.55 7 21 6.55 21 6C21 5.45 20.55 5 20 5H8C7.45 5 7 5.45 7 6Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_8070\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const dividerIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_7900)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M19 13H5C4.45 13 4 12.55 4 12C4 11.45 4.45 11 5 11H19C19.55 11 20 11.45 20 12C20 12.55 19.55 13 19 13Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_7900\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const h1Icon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_992_5553)\">\n      <path\n        d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19ZM12 17H14V7H10V9H12V17Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_992_5553\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const h2Icon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_992_5559)\">\n      <path\n        d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19ZM15 15H11V13H13C14.1 13 15 12.11 15 11V9C15 7.89 14.1 7 13 7H9V9H13V11H11C9.9 11 9 11.89 9 13V17H15V15Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_992_5559\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const h3Icon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_992_5565)\">\n      <path\n        d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19ZM15 15V13.5C15 12.67 14.33 12 13.5 12C14.33 12 15 11.33 15 10.5V9C15 7.89 14.1 7 13 7H9V9H13V11H11V13H13V15H9V17H13C14.1 17 15 16.11 15 15Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_992_5565\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const h4Icon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_7757)\">\n      <path\n        d=\"M19.04 3H5.04004C3.94004 3 3.04004 3.9 3.04004 5V19C3.04004 20.1 3.94004 21 5.04004 21H19.04C20.14 21 21.04 20.1 21.04 19V5C21.04 3.9 20.14 3 19.04 3ZM19.04 19H5.04004V5H19.04V19ZM13.04 17H15.04V7H13.04V11H11.04V7H9.04004V13H13.04V17Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_7757\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const h5Icon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_7760)\">\n      <path\n        d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19ZM15 15V13C15 11.89 14.1 11 13 11H11V9H15V7H9V13H13V15H9V17H13C14.1 17 15 16.11 15 15Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_7760\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const h6Icon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_7763)\">\n      <path\n        d=\"M11 17H13C14.1 17 15 16.11 15 15V13C15 11.89 14.1 11 13 11H11V9H15V7H11C9.9 7 9 7.89 9 9V15C9 16.11 9.9 17 11 17ZM11 13H13V15H11V13ZM19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_7763\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const menuIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_971_7680)\">\n      <path\n        d=\"M11 18C11 19.1 10.1 20 9 20C7.9 20 7 19.1 7 18C7 16.9 7.9 16 9 16C10.1 16 11 16.9 11 18ZM9 10C7.9 10 7 10.9 7 12C7 13.1 7.9 14 9 14C10.1 14 11 13.1 11 12C11 10.9 10.1 10 9 10ZM9 4C7.9 4 7 4.9 7 6C7 7.1 7.9 8 9 8C10.1 8 11 7.1 11 6C11 4.9 10.1 4 9 4ZM15 8C16.1 8 17 7.1 17 6C17 4.9 16.1 4 15 4C13.9 4 13 4.9 13 6C13 7.1 13.9 8 15 8ZM15 10C13.9 10 13 10.9 13 12C13 13.1 13.9 14 15 14C16.1 14 17 13.1 17 12C17 10.9 16.1 10 15 10ZM15 16C13.9 16 13 16.9 13 18C13 19.1 13.9 20 15 20C16.1 20 17 19.1 17 18C17 16.9 16.1 16 15 16Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_971_7680\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const orderedListIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_8067)\">\n      <path\n        d=\"M8 7H20C20.55 7 21 6.55 21 6C21 5.45 20.55 5 20 5H8C7.45 5 7 5.45 7 6C7 6.55 7.45 7 8 7ZM20 17H8C7.45 17 7 17.45 7 18C7 18.55 7.45 19 8 19H20C20.55 19 21 18.55 21 18C21 17.45 20.55 17 20 17ZM20 11H8C7.45 11 7 11.45 7 12C7 12.55 7.45 13 8 13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11ZM4.5 16H2.5C2.22 16 2 16.22 2 16.5C2 16.78 2.22 17 2.5 17H4V17.5H3.5C3.22 17.5 3 17.72 3 18C3 18.28 3.22 18.5 3.5 18.5H4V19H2.5C2.22 19 2 19.22 2 19.5C2 19.78 2.22 20 2.5 20H4.5C4.78 20 5 19.78 5 19.5V16.5C5 16.22 4.78 16 4.5 16ZM2.5 5H3V7.5C3 7.78 3.22 8 3.5 8C3.78 8 4 7.78 4 7.5V4.5C4 4.22 3.78 4 3.5 4H2.5C2.22 4 2 4.22 2 4.5C2 4.78 2.22 5 2.5 5ZM4.5 10H2.5C2.22 10 2 10.22 2 10.5C2 10.78 2.22 11 2.5 11H3.8L2.12 12.96C2.04 13.05 2 13.17 2 13.28V13.5C2 13.78 2.22 14 2.5 14H4.5C4.78 14 5 13.78 5 13.5C5 13.22 4.78 13 4.5 13H3.2L4.88 11.04C4.96 10.95 5 10.83 5 10.72V10.5C5 10.22 4.78 10 4.5 10Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_8067\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const quoteIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_7897)\">\n      <path\n        d=\"M7.17 17C7.68 17 8.15 16.71 8.37 16.26L9.79 13.42C9.93 13.14 10 12.84 10 12.53V8C10 7.45 9.55 7 9 7H5C4.45 7 4 7.45 4 8V12C4 12.55 4.45 13 5 13H7L5.97 15.06C5.52 15.95 6.17 17 7.17 17ZM17.17 17C17.68 17 18.15 16.71 18.37 16.26L19.79 13.42C19.93 13.14 20 12.84 20 12.53V8C20 7.45 19.55 7 19 7H15C14.45 7 14 7.45 14 8V12C14 12.55 14.45 13 15 13H17L15.97 15.06C15.52 15.95 16.17 17 17.17 17Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_7897\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const tableIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_8078)\">\n      <path\n        d=\"M20 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H20C21.1 21 22 20.1 22 19V5C22 3.9 21.1 3 20 3ZM20 5V8H5V5H20ZM15 19H10V10H15V19ZM5 10H8V19H5V10ZM17 19V10H20V19H17Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_8078\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const textIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_992_5547)\">\n      <path\n        d=\"M5 5.5C5 6.33 5.67 7 6.5 7H10.5V17.5C10.5 18.33 11.17 19 12 19C12.83 19 13.5 18.33 13.5 17.5V7H17.5C18.33 7 19 6.33 19 5.5C19 4.67 18.33 4 17.5 4H6.5C5.67 4 5 4.67 5 5.5Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_992_5547\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","export const todoListIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M5.66936 16.3389L9.39244 12.6158C9.54115 12.4671 9.71679 12.3937 9.91936 12.3957C10.1219 12.3976 10.2975 12.4761 10.4463 12.6312C10.5847 12.7823 10.654 12.9585 10.654 13.1599C10.654 13.3613 10.5847 13.5363 10.4463 13.6851L6.32704 17.8197C6.14627 18.0004 5.93538 18.0908 5.69436 18.0908C5.45333 18.0908 5.24243 18.0004 5.06166 17.8197L3.01744 15.7754C2.87899 15.637 2.81136 15.4629 2.81456 15.2533C2.81776 15.0437 2.88859 14.8697 3.02706 14.7312C3.16551 14.5928 3.34008 14.5235 3.55076 14.5235C3.76144 14.5235 3.93494 14.5928 4.07126 14.7312L5.66936 16.3389ZM5.66936 8.72359L9.39244 5.00049C9.54115 4.85177 9.71679 4.77838 9.91936 4.78031C10.1219 4.78223 10.2975 4.86075 10.4463 5.01586C10.5847 5.16691 10.654 5.34314 10.654 5.54454C10.654 5.74592 10.5847 5.92097 10.4463 6.06969L6.32704 10.2043C6.14627 10.3851 5.93538 10.4755 5.69436 10.4755C5.45333 10.4755 5.24243 10.3851 5.06166 10.2043L3.01744 8.16009C2.87899 8.02162 2.81136 7.84759 2.81456 7.63799C2.81776 7.42837 2.88859 7.25433 3.02706 7.11586C3.16551 6.97741 3.34008 6.90819 3.55076 6.90819C3.76144 6.90819 3.93494 6.97741 4.07126 7.11586L5.66936 8.72359ZM13.7597 16.5581C13.5472 16.5581 13.3691 16.4862 13.2253 16.3424C13.0816 16.1986 13.0097 16.0204 13.0097 15.8078C13.0097 15.5952 13.0816 15.4171 13.2253 15.2735C13.3691 15.13 13.5472 15.0582 13.7597 15.0582H20.7597C20.9722 15.0582 21.1503 15.1301 21.2941 15.2739C21.4378 15.4177 21.5097 15.5959 21.5097 15.8085C21.5097 16.0211 21.4378 16.1992 21.2941 16.3427C21.1503 16.4863 20.9722 16.5581 20.7597 16.5581H13.7597ZM13.7597 8.94276C13.5472 8.94276 13.3691 8.87085 13.2253 8.72704C13.0816 8.58324 13.0097 8.40504 13.0097 8.19244C13.0097 7.97985 13.0816 7.80177 13.2253 7.65819C13.3691 7.5146 13.5472 7.44281 13.7597 7.44281H20.7597C20.9722 7.44281 21.1503 7.51471 21.2941 7.65851C21.4378 7.80233 21.5097 7.98053 21.5097 8.19311C21.5097 8.40571 21.4378 8.5838 21.2941 8.72739C21.1503 8.87097 20.9722 8.94276 20.7597 8.94276H13.7597Z\"\n    />\n  </svg>\n`\n","import type { MenuItem, MenuItemGroup } from './utils'\n\nexport class GroupBuilder {\n  #groups: MenuItemGroup<false>[] = []\n\n  clear = () => {\n    this.#groups = []\n    return this\n  }\n\n  #getGroupInstance = (group: MenuItemGroup<false>) => {\n    const groupInstance = {\n      group,\n      addItem: (key: string, item: Omit<MenuItem, 'key' | 'index'>) => {\n        const data = { key, ...item }\n        group.items.push(data)\n        return groupInstance\n      },\n      clear: () => {\n        group.items = []\n        return groupInstance\n      },\n    }\n    return groupInstance\n  }\n\n  addGroup = (key: string, label: string) => {\n    const items: Omit<MenuItem, 'index'>[] = []\n    const group: MenuItemGroup<false> = {\n      key,\n      label,\n      items,\n    }\n    this.#groups.push(group)\n\n    return this.#getGroupInstance(group)\n  }\n\n  getGroup = (key: string) => {\n    const group = this.#groups.find((group) => group.key === key)\n    if (!group) throw new Error(`Group with key ${key} not found`)\n\n    return this.#getGroupInstance(group)\n  }\n\n  build = () => {\n    return this.#groups\n  }\n}\n","import type { Ctx } from '@milkdown/kit/ctx'\nimport type { Attrs, NodeType } from '@milkdown/kit/prose/model'\nimport type { Command, Transaction } from '@milkdown/kit/prose/state'\n\nimport { findWrapping } from '@milkdown/kit/prose/transform'\n\nexport interface MenuItem {\n  index: number\n  key: string\n  label: string\n  icon: string\n  onRun: (ctx: Ctx) => void\n}\n\ntype WithRange<T, HasIndex extends true | false = true> = HasIndex extends true\n  ? T & { range: [start: number, end: number] }\n  : T\n\nexport type MenuItemGroup<HasIndex extends true | false = true> = WithRange<\n  {\n    key: string\n    label: string\n    items: HasIndex extends true ? MenuItem[] : Omit<MenuItem, 'index'>[]\n  },\n  HasIndex\n>\n\nexport function clearRange(tr: Transaction) {\n  const { $from, $to } = tr.selection\n  const { pos: from } = $from\n  const { pos: to } = $to\n  tr = tr.deleteRange(from - $from.node().content.size, to)\n  return tr\n}\n\nexport function setBlockType(\n  tr: Transaction,\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n) {\n  const { from, to } = tr.selection\n  return tr.setBlockType(from, to, nodeType, attrs)\n}\n\nexport function wrapInBlockType(\n  tr: Transaction,\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n) {\n  const { $from, $to } = tr.selection\n\n  const range = $from.blockRange($to)\n  const wrapping = range && findWrapping(range, nodeType, attrs)\n  if (!wrapping) return null\n\n  return tr.wrap(range, wrapping)\n}\n\nexport function addBlockType(\n  tr: Transaction,\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n) {\n  const node = nodeType.createAndFill(attrs)\n  if (!node) return null\n\n  return tr.replaceSelectionWith(node)\n}\n\nexport function clearContentAndSetBlockType(\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n): Command {\n  return (state, dispatch) => {\n    if (dispatch) {\n      const tr = setBlockType(clearRange(state.tr), nodeType, attrs)\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n}\n\nexport function clearContentAndWrapInBlockType(\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n): Command {\n  return (state, dispatch) => {\n    const tr = wrapInBlockType(clearRange(state.tr), nodeType, attrs)\n    if (!tr) return false\n\n    if (dispatch) dispatch(tr.scrollIntoView())\n\n    return true\n  }\n}\n\nexport function clearContentAndAddBlockType(\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n): Command {\n  return (state, dispatch) => {\n    const tr = addBlockType(clearRange(state.tr), nodeType, attrs)\n    if (!tr) return false\n\n    if (dispatch) dispatch(tr.scrollIntoView())\n\n    return true\n  }\n}\n","import type { Ctx } from '@milkdown/kit/ctx'\n\nimport { imageBlockSchema } from '@milkdown/kit/component/image-block'\nimport { editorViewCtx } from '@milkdown/kit/core'\nimport {\n  blockquoteSchema,\n  bulletListSchema,\n  codeBlockSchema,\n  headingSchema,\n  hrSchema,\n  listItemSchema,\n  orderedListSchema,\n  paragraphSchema,\n} from '@milkdown/kit/preset/commonmark'\nimport { createTable } from '@milkdown/kit/preset/gfm'\nimport { TextSelection } from '@milkdown/kit/prose/state'\n\nimport type { BlockEditFeatureConfig } from '../index'\nimport type { MenuItemGroup } from './utils'\n\nimport { CrepeFeature } from '../../..'\nimport { FeaturesCtx } from '../../../core/slice'\nimport {\n  bulletListIcon,\n  codeIcon,\n  dividerIcon,\n  functionsIcon,\n  h1Icon,\n  h2Icon,\n  h3Icon,\n  h4Icon,\n  h5Icon,\n  h6Icon,\n  imageIcon,\n  orderedListIcon,\n  quoteIcon,\n  tableIcon,\n  textIcon,\n  todoListIcon,\n} from '../../../icons'\nimport { GroupBuilder } from './group-builder'\nimport {\n  clearContentAndAddBlockType,\n  clearContentAndSetBlockType,\n  clearContentAndWrapInBlockType,\n  clearRange,\n} from './utils'\n\nexport function getGroups(\n  filter?: string,\n  config?: BlockEditFeatureConfig,\n  ctx?: Ctx\n) {\n  const flags = ctx?.get(FeaturesCtx)\n  const isLatexEnabled = flags?.includes(CrepeFeature.Latex)\n  const isImageBlockEnabled = flags?.includes(CrepeFeature.ImageBlock)\n  const isTableEnabled = flags?.includes(CrepeFeature.Table)\n\n  const groupBuilder = new GroupBuilder()\n  groupBuilder\n    .addGroup('text', config?.slashMenuTextGroupLabel ?? 'Text')\n    .addItem('text', {\n      label: config?.slashMenuTextGroupLabel ?? 'Text',\n      icon: config?.slashMenuTextIcon?.() ?? textIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(paragraphSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n    .addItem('h1', {\n      label: config?.slashMenuH1Label ?? 'Heading 1',\n      icon: config?.slashMenuH1Icon?.() ?? h1Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 1,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h2', {\n      label: config?.slashMenuH2Label ?? 'Heading 2',\n      icon: config?.slashMenuH2Icon?.() ?? h2Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 2,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h3', {\n      label: config?.slashMenuH3Label ?? 'Heading 3',\n      icon: config?.slashMenuH3Icon?.() ?? h3Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 3,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h4', {\n      label: config?.slashMenuH4Label ?? 'Heading 4',\n      icon: config?.slashMenuH4Icon?.() ?? h4Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 4,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h5', {\n      label: config?.slashMenuH5Label ?? 'Heading 5',\n      icon: config?.slashMenuH5Icon?.() ?? h5Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 5,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h6', {\n      label: config?.slashMenuH6Label ?? 'Heading 6',\n      icon: config?.slashMenuH6Icon?.() ?? h6Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 6,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('quote', {\n      label: config?.slashMenuQuoteLabel ?? 'Quote',\n      icon: config?.slashMenuQuoteIcon?.() ?? quoteIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          blockquoteSchema.type(ctx)\n        )\n        command(state, dispatch)\n      },\n    })\n    .addItem('divider', {\n      label: config?.slashMenuDividerLabel ?? 'Divider',\n      icon: config?.slashMenuDividerIcon?.() ?? dividerIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(hrSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n\n  groupBuilder\n    .addGroup('list', config?.slashMenuListGroupLabel ?? 'List')\n    .addItem('bullet-list', {\n      label: config?.slashMenuBulletListLabel ?? 'Bullet List',\n      icon: config?.slashMenuBulletListIcon?.() ?? bulletListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          bulletListSchema.type(ctx)\n        )\n        command(state, dispatch)\n      },\n    })\n    .addItem('ordered-list', {\n      label: config?.slashMenuOrderedListLabel ?? 'Ordered List',\n      icon: config?.slashMenuOrderedListIcon?.() ?? orderedListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          orderedListSchema.type(ctx)\n        )\n        command(state, dispatch)\n      },\n    })\n    .addItem('todo-list', {\n      label: config?.slashMenuTaskListLabel ?? 'Todo List',\n      icon: config?.slashMenuTaskListIcon?.() ?? todoListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          listItemSchema.type(ctx),\n          { checked: false }\n        )\n        command(state, dispatch)\n      },\n    })\n\n  const advancedGroup = groupBuilder.addGroup(\n    'advanced',\n    config?.slashMenuAdvancedGroupLabel ?? 'Advanced'\n  )\n\n  if (isImageBlockEnabled) {\n    advancedGroup.addItem('image', {\n      label: config?.slashMenuImageLabel ?? 'Image',\n      icon: config?.slashMenuImageIcon?.() ?? imageIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(imageBlockSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n  }\n\n  advancedGroup.addItem('code', {\n    label: config?.slashMenuCodeBlockLabel ?? 'Code',\n    icon: config?.slashMenuCodeBlockIcon?.() ?? codeIcon,\n    onRun: (ctx) => {\n      const view = ctx.get(editorViewCtx)\n      const { dispatch, state } = view\n\n      const command = clearContentAndAddBlockType(codeBlockSchema.type(ctx))\n      command(state, dispatch)\n    },\n  })\n\n  if (isTableEnabled) {\n    advancedGroup.addItem('table', {\n      label: config?.slashMenuTableLabel ?? 'Table',\n      icon: config?.slashMenuTableIcon?.() ?? tableIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n        let { tr } = state\n        tr = clearRange(tr)\n        const from = tr.selection.from\n        const table = createTable(ctx, 3, 3)\n        tr = tr.replaceSelectionWith(table)\n        dispatch(tr)\n\n        requestAnimationFrame(() => {\n          const docSize = view.state.doc.content.size\n          const $pos = view.state.doc.resolve(\n            from > docSize ? docSize : from < 0 ? 0 : from\n          )\n          const selection = TextSelection.near($pos)\n          const tr = view.state.tr\n          tr.setSelection(selection)\n          dispatch(tr.scrollIntoView())\n        })\n      },\n    })\n  }\n\n  if (isLatexEnabled) {\n    advancedGroup.addItem('math', {\n      label: config?.slashMenuMathLabel ?? 'Math',\n      icon: config?.slashMenuMathIcon?.() ?? functionsIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(codeBlockSchema.type(ctx), {\n          language: 'LaTex',\n        })\n        command(state, dispatch)\n      },\n    })\n  }\n\n  config?.buildMenu?.(groupBuilder)\n\n  let groups = groupBuilder.build()\n\n  if (filter) {\n    groups = groups\n      .map((group) => {\n        const items = group.items.filter((item) =>\n          item.label.toLowerCase().includes(filter.toLowerCase())\n        )\n\n        return {\n          ...group,\n          items,\n        }\n      })\n      .filter((group) => group.items.length > 0)\n  }\n\n  const items = groups.flatMap((groups) => groups.items)\n  items.forEach((item, index) => {\n    Object.assign(item, { index })\n  })\n\n  groups.reduce((acc, group) => {\n    const end = acc + group.items.length\n    Object.assign(group, {\n      range: [acc, end],\n    })\n    return end\n  }, 0)\n\n  return {\n    groups: groups as MenuItemGroup[],\n    size: items.length,\n  }\n}\n","import type { Ctx } from '@milkdown/kit/ctx'\n\nimport { Icon } from '@milkdown/kit/component'\nimport {\n  computed,\n  defineComponent,\n  onUnmounted,\n  ref,\n  watch,\n  watchEffect,\n  type Ref,\n  h,\n} from 'vue'\n\nimport type { BlockEditFeatureConfig } from '..'\n\nimport { getGroups } from './config'\n\nh\n\ntype MenuProps = {\n  ctx: Ctx\n  show: Ref<boolean>\n  filter: Ref<string>\n  hide: () => void\n  config?: BlockEditFeatureConfig\n}\n\nexport const Menu = defineComponent<MenuProps>({\n  props: {\n    ctx: {\n      type: Object,\n      required: true,\n    },\n    show: {\n      type: Object,\n      required: true,\n    },\n    filter: {\n      type: Object,\n      required: true,\n    },\n    hide: {\n      type: Function,\n      required: true,\n    },\n    config: {\n      type: Object,\n      required: false,\n    },\n  },\n  setup({ ctx, show, filter, hide, config }) {\n    const host = ref<HTMLElement>()\n    const groupInfo = computed(() => getGroups(filter.value, config, ctx))\n    const hoverIndex = ref(0)\n    const prevMousePosition = ref({ x: -999, y: -999 })\n\n    const onPointerMove = (e: MouseEvent) => {\n      const { x, y } = e\n      prevMousePosition.value = { x, y }\n    }\n\n    watch([groupInfo, show], () => {\n      const { size } = groupInfo.value\n      if (size === 0 && show.value) hide()\n      else if (hoverIndex.value >= size) hoverIndex.value = 0\n    })\n\n    const onHover = (\n      index: number | ((prev: number) => number),\n      after?: (index: number) => void\n    ) => {\n      const prevHoverIndex = hoverIndex.value\n      const next = typeof index === 'function' ? index(prevHoverIndex) : index\n      after?.(next)\n      hoverIndex.value = next\n    }\n\n    const scrollToIndex = (index: number) => {\n      const target = host.value?.querySelector<HTMLElement>(\n        `[data-index=\"${index}\"]`\n      )\n      const scrollRoot = host.value?.querySelector<HTMLElement>('.menu-groups')\n\n      if (!target || !scrollRoot) return\n\n      scrollRoot.scrollTop = target.offsetTop - scrollRoot.offsetTop\n    }\n\n    const runByIndex = (index: number) => {\n      const item = groupInfo.value.groups\n        .flatMap((group) => group.items)\n        .at(index)\n      if (item && ctx) item.onRun(ctx)\n\n      hide()\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      const { size, groups } = groupInfo.value\n      if (e.key === 'Escape') {\n        e.preventDefault()\n        hide?.()\n        return\n      }\n\n      if (e.key === 'ArrowDown') {\n        e.preventDefault()\n        return onHover(\n          (index) => (index < size - 1 ? index + 1 : index),\n          scrollToIndex\n        )\n      }\n\n      if (e.key === 'ArrowUp') {\n        e.preventDefault()\n        return onHover(\n          (index) => (index <= 0 ? index : index - 1),\n          scrollToIndex\n        )\n      }\n\n      if (e.key === 'ArrowLeft') {\n        e.preventDefault()\n        return onHover((index) => {\n          const group = groups.find(\n            (group) => group.range[0] <= index && group.range[1] > index\n          )\n          if (!group) return index\n\n          const prevGroup = groups[groups.indexOf(group) - 1]\n          if (!prevGroup) return index\n\n          return prevGroup.range[1] - 1\n        }, scrollToIndex)\n      }\n\n      if (e.key === 'ArrowRight') {\n        e.preventDefault()\n        return onHover((index) => {\n          const group = groups.find(\n            (group) => group.range[0] <= index && group.range[1] > index\n          )\n          if (!group) return index\n\n          const nextGroup = groups[groups.indexOf(group) + 1]\n          if (!nextGroup) return index\n\n          return nextGroup.range[0]\n        }, scrollToIndex)\n      }\n\n      if (e.key === 'Enter') {\n        e.preventDefault()\n        runByIndex(hoverIndex.value)\n      }\n    }\n\n    const getOnPointerEnter = (index: number) => (e: MouseEvent) => {\n      const prevPos = prevMousePosition.value\n      if (!prevPos) return\n\n      const { x, y } = e\n      if (x === prevPos.x && y === prevPos.y) return\n\n      onHover(index)\n    }\n\n    watchEffect(() => {\n      const isShown = show.value\n      if (isShown) {\n        window.addEventListener('keydown', onKeydown, { capture: true })\n      } else {\n        window.removeEventListener('keydown', onKeydown, { capture: true })\n      }\n    })\n    onUnmounted(() => {\n      window.removeEventListener('keydown', onKeydown, { capture: true })\n    })\n\n    return () => {\n      return (\n        <div ref={host} onPointerdown={(e) => e.preventDefault()}>\n          <nav class=\"tab-group\">\n            <ul>\n              {groupInfo.value.groups.map((group) => (\n                <li\n                  key={group.key}\n                  onPointerdown={() => onHover(group.range[0], scrollToIndex)}\n                  class={\n                    hoverIndex.value >= group.range[0] &&\n                    hoverIndex.value < group.range[1]\n                      ? 'selected'\n                      : ''\n                  }\n                >\n                  {group.label}\n                </li>\n              ))}\n            </ul>\n          </nav>\n          <div class=\"menu-groups\" onPointermove={onPointerMove}>\n            {groupInfo.value.groups.map((group) => (\n              <div key={group.key} class=\"menu-group\">\n                <h6>{group.label}</h6>\n                <ul>\n                  {group.items.map((item) => (\n                    <li\n                      key={item.key}\n                      data-index={item.index}\n                      class={hoverIndex.value === item.index ? 'hover' : ''}\n                      onPointerenter={getOnPointerEnter(item.index)}\n                      onPointerdown={() => {\n                        host.value\n                          ?.querySelector(`[data-index=\"${item.index}\"]`)\n                          ?.classList.add('active')\n                      }}\n                      onPointerup={() => {\n                        host.value\n                          ?.querySelector(`[data-index=\"${item.index}\"]`)\n                          ?.classList.remove('active')\n                        runByIndex(item.index)\n                      }}\n                    >\n                      <Icon icon={item.icon} />\n                      <span>{item.label}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      )\n    }\n  },\n})\n","import type { Ctx } from '@milkdown/kit/ctx'\nimport type { EditorView } from '@milkdown/kit/prose/view'\n\nimport { SlashProvider, slashFactory } from '@milkdown/kit/plugin/slash'\nimport {\n  TextSelection,\n  type PluginView,\n  type Selection,\n} from '@milkdown/kit/prose/state'\nimport { $ctx } from '@milkdown/kit/utils'\nimport { createApp, ref, type App, type Ref } from 'vue'\n\nimport type { BlockEditFeatureConfig } from '../index'\n\nimport { isInCodeBlock, isInList } from '../../../utils'\nimport { Menu } from './component'\n\nexport const menu = slashFactory('CREPE_MENU')\n\nexport interface MenuAPI {\n  show: (pos: number) => void\n  hide: () => void\n}\n\nexport const menuAPI = $ctx(\n  {\n    show: () => {},\n    hide: () => {},\n  } as MenuAPI,\n  'menuAPICtx'\n)\n\nexport function configureMenu(ctx: Ctx, config?: BlockEditFeatureConfig) {\n  ctx.set(menu.key, {\n    view: (view) => new MenuView(ctx, view, config),\n  })\n}\n\nclass MenuView implements PluginView {\n  readonly #content: HTMLElement\n  readonly #app: App\n  readonly #filter: Ref<string>\n  readonly #slashProvider: SlashProvider\n  #programmaticallyPos: number | null = null\n\n  constructor(ctx: Ctx, view: EditorView, config?: BlockEditFeatureConfig) {\n    const content = document.createElement('div')\n    content.classList.add('milkdown-slash-menu')\n    const show = ref(false)\n\n    const filter = ref('')\n    this.#filter = filter\n\n    const hide = this.hide\n\n    const app = createApp(Menu, {\n      ctx,\n      config,\n      show,\n      filter,\n      hide,\n    })\n    this.#app = app\n    app.mount(content)\n\n    this.#content = content\n    // oxlint-disable-next-line ts/no-this-alias\n    const self = this\n    this.#slashProvider = new SlashProvider({\n      content: this.#content,\n      debounce: 20,\n      shouldShow(this: SlashProvider, view: EditorView) {\n        if (\n          isInCodeBlock(view.state.selection) ||\n          isInList(view.state.selection)\n        )\n          return false\n\n        const currentText = this.getContent(view, (node) =>\n          ['paragraph', 'heading'].includes(node.type.name)\n        )\n\n        if (currentText == null) return false\n\n        if (!isSelectionAtEndOfNode(view.state.selection)) {\n          return false\n        }\n\n        const pos = self.#programmaticallyPos\n\n        filter.value = currentText.startsWith('/')\n          ? currentText.slice(1)\n          : currentText\n\n        if (typeof pos === 'number') {\n          const maxSize = view.state.doc.nodeSize - 2\n          const validPos = Math.min(pos, maxSize)\n          if (\n            view.state.doc.resolve(validPos).node() !==\n            view.state.doc.resolve(view.state.selection.from).node()\n          ) {\n            self.#programmaticallyPos = null\n\n            return false\n          }\n\n          return true\n        }\n\n        if (!currentText.startsWith('/')) return false\n\n        return true\n      },\n      offset: 10,\n    })\n\n    this.#slashProvider.onShow = () => {\n      show.value = true\n    }\n    this.#slashProvider.onHide = () => {\n      show.value = false\n    }\n    this.update(view)\n\n    ctx.set(menuAPI.key, {\n      show: (pos) => this.show(pos),\n      hide: () => this.hide(),\n    })\n  }\n\n  update = (view: EditorView) => {\n    this.#slashProvider.update(view)\n  }\n\n  show = (pos: number) => {\n    this.#programmaticallyPos = pos\n    this.#filter.value = ''\n    this.#slashProvider.show()\n  }\n\n  hide = () => {\n    this.#programmaticallyPos = null\n    this.#slashProvider.hide()\n  }\n\n  destroy = () => {\n    this.#slashProvider.destroy()\n    this.#app.unmount()\n    this.#content.remove()\n  }\n}\n\nfunction isSelectionAtEndOfNode(selection: Selection) {\n  if (!(selection instanceof TextSelection)) return false\n\n  const { $head } = selection\n  const parent = $head.parent\n  const offset = $head.parentOffset\n\n  return offset === parent.content.size\n}\n","import { Icon } from '@milkdown/kit/component'\nimport { defineComponent, ref, h, Fragment } from 'vue'\n\nimport type { Icon as IconType } from '../../shared'\n\nh\nFragment\n\nexport interface BlockHandleProps {\n  onAdd: () => void\n  addIcon: IconType\n  handleIcon: IconType\n}\n\nexport const BlockHandle = defineComponent<BlockHandleProps>({\n  props: {\n    onAdd: {\n      type: Function,\n      required: true,\n    },\n    addIcon: {\n      type: Function,\n      required: true,\n    },\n    handleIcon: {\n      type: Function,\n      required: true,\n    },\n  },\n  setup(props) {\n    const addButton = ref<HTMLDivElement>()\n\n    return () => {\n      return (\n        <>\n          <div\n            ref={addButton}\n            class=\"operation-item\"\n            onPointerdown={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              addButton.value?.classList.add('active')\n            }}\n            onPointerup={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              addButton.value?.classList.remove('active')\n              props.onAdd()\n            }}\n          >\n            <Icon icon={props.addIcon()} />\n          </div>\n          <div class=\"operation-item\">\n            <Icon icon={props.handleIcon()} />\n          </div>\n        </>\n      )\n    }\n  },\n})\n","import type { Ctx } from '@milkdown/kit/ctx'\nimport type { PluginView } from '@milkdown/kit/prose/state'\n\nimport { editorViewCtx } from '@milkdown/kit/core'\nimport { BlockProvider, block, blockConfig } from '@milkdown/kit/plugin/block'\nimport { paragraphSchema } from '@milkdown/kit/preset/commonmark'\nimport { findParent } from '@milkdown/kit/prose'\nimport { TextSelection } from '@milkdown/kit/prose/state'\nimport { createApp, type App } from 'vue'\n\nimport type { BlockEditFeatureConfig } from '../index'\n\nimport { menuIcon, plusIcon } from '../../../icons'\nimport { menuAPI } from '../menu'\nimport { BlockHandle } from './component'\n\nexport class BlockHandleView implements PluginView {\n  #content: HTMLElement\n  #provider: BlockProvider\n  #app: App\n  readonly #ctx: Ctx\n\n  constructor(ctx: Ctx, config?: BlockEditFeatureConfig) {\n    this.#ctx = ctx\n    const content = document.createElement('div')\n    content.classList.add('milkdown-block-handle')\n    const app = createApp(BlockHandle, {\n      onAdd: this.onAdd,\n      addIcon: config?.handleAddIcon ?? (() => plusIcon),\n      handleIcon: config?.handleDragIcon ?? (() => menuIcon),\n    })\n    app.mount(content)\n    this.#app = app\n    this.#content = content\n    this.#provider = new BlockProvider({\n      ctx,\n      content,\n      getOffset: () => 16,\n      getPlacement: ({ active, blockDom }) => {\n        if (active.node.type.name === 'heading') return 'left'\n\n        let totalDescendant = 0\n        active.node.descendants((node) => {\n          totalDescendant += node.childCount\n        })\n        const dom = active.el\n        const domRect = dom.getBoundingClientRect()\n        const handleRect = blockDom.getBoundingClientRect()\n        const style = window.getComputedStyle(dom)\n        const paddingTop = Number.parseInt(style.paddingTop, 10) || 0\n        const paddingBottom = Number.parseInt(style.paddingBottom, 10) || 0\n        const height = domRect.height - paddingTop - paddingBottom\n        const handleHeight = handleRect.height\n        return totalDescendant > 2 || handleHeight < height\n          ? 'left-start'\n          : 'left'\n      },\n    })\n    this.update()\n  }\n\n  update = () => {\n    this.#provider.update()\n  }\n\n  destroy = () => {\n    this.#provider.destroy()\n    this.#content.remove()\n    this.#app.unmount()\n  }\n\n  onAdd = () => {\n    const ctx = this.#ctx\n    const view = ctx.get(editorViewCtx)\n    if (!view.hasFocus()) view.focus()\n\n    const { state, dispatch } = view\n    const active = this.#provider.active\n    if (!active) return\n\n    const $pos = active.$pos\n    const pos = $pos.pos + active.node.nodeSize\n    let tr = state.tr.insert(pos, paragraphSchema.type(ctx).create())\n    tr = tr.setSelection(TextSelection.near(tr.doc.resolve(pos)))\n    dispatch(tr.scrollIntoView())\n\n    this.#provider.hide()\n    ctx.get(menuAPI.key).show(tr.selection.from)\n  }\n}\n\nexport function configureBlockHandle(\n  ctx: Ctx,\n  config?: BlockEditFeatureConfig\n) {\n  ctx.set(blockConfig.key, {\n    filterNodes: (pos) => {\n      const filter = findParent((node) =>\n        ['table', 'blockquote', 'math_inline'].includes(node.type.name)\n      )(pos)\n      if (filter) return false\n\n      return true\n    },\n  })\n  ctx.set(block.key, {\n    view: () => new BlockHandleView(ctx, config),\n  })\n}\n","import { block } from '@milkdown/kit/plugin/block'\n\nimport type { DefineFeature, Icon } from '../shared'\nimport type { GroupBuilder } from './menu/group-builder'\n\nimport { configureBlockHandle } from './handle'\nimport { configureMenu, menu, menuAPI } from './menu'\n\ninterface BlockEditConfig {\n  handleAddIcon: Icon\n  handleDragIcon: Icon\n  buildMenu: (builder: GroupBuilder) => void\n\n  slashMenuTextGroupLabel: string\n  slashMenuTextIcon: Icon\n  slashMenuTextLabel: string\n  slashMenuH1Icon: Icon\n  slashMenuH1Label: string\n  slashMenuH2Icon: Icon\n  slashMenuH2Label: string\n  slashMenuH3Icon: Icon\n  slashMenuH3Label: string\n  slashMenuH4Icon: Icon\n  slashMenuH4Label: string\n  slashMenuH5Icon: Icon\n  slashMenuH5Label: string\n  slashMenuH6Icon: Icon\n  slashMenuH6Label: string\n  slashMenuQuoteIcon: Icon\n  slashMenuQuoteLabel: string\n  slashMenuDividerIcon: Icon\n  slashMenuDividerLabel: string\n\n  slashMenuListGroupLabel: string\n  slashMenuBulletListIcon: Icon\n  slashMenuBulletListLabel: string\n  slashMenuOrderedListIcon: Icon\n  slashMenuOrderedListLabel: string\n  slashMenuTaskListIcon: Icon\n  slashMenuTaskListLabel: string\n\n  slashMenuAdvancedGroupLabel: string\n  slashMenuImageIcon: Icon\n  slashMenuImageLabel: string\n  slashMenuCodeBlockIcon: Icon\n  slashMenuCodeBlockLabel: string\n  slashMenuTableIcon: Icon\n  slashMenuTableLabel: string\n  slashMenuMathIcon: Icon\n  slashMenuMathLabel: string\n}\n\nexport type BlockEditFeatureConfig = Partial<BlockEditConfig>\n\nexport const defineFeature: DefineFeature<BlockEditFeatureConfig> = (\n  editor,\n  config\n) => {\n  editor\n    .config((ctx) => configureBlockHandle(ctx, config))\n    .config((ctx) => configureMenu(ctx, config))\n    .use(menuAPI)\n    .use(block)\n    .use(menu)\n}\n"],"names":["__privateAdd","__privateSet","__privateGet","group","ctx","tr","items","groups","_content","_app","view"],"mappings":"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"}