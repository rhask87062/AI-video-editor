{"version":3,"file":"index-DTnzpEoW.js","sources":["../../src/feature/index.ts","../../src/core/slice.ts","../../src/core/crepe.ts"],"sourcesContent":["import type { Editor } from '@milkdown/kit/core'\n\nimport type { BlockEditFeatureConfig } from './block-edit'\nimport type { CodeMirrorFeatureConfig } from './code-mirror'\nimport type { CursorFeatureConfig } from './cursor'\nimport type { ImageBlockFeatureConfig } from './image-block'\nimport type { LatexFeatureConfig } from './latex'\nimport type { LinkTooltipFeatureConfig } from './link-tooltip'\nimport type { ListItemFeatureConfig } from './list-item'\nimport type { PlaceHolderFeatureConfig } from './placeholder'\nimport type { TableFeatureConfig } from './table'\nimport type { ToolbarFeatureConfig } from './toolbar'\n\nexport enum CrepeFeature {\n  CodeMirror = 'code-mirror',\n  ListItem = 'list-item',\n  LinkTooltip = 'link-tooltip',\n  Cursor = 'cursor',\n  ImageBlock = 'image-block',\n  BlockEdit = 'block-edit',\n  Toolbar = 'toolbar',\n  Placeholder = 'placeholder',\n  Table = 'table',\n  Latex = 'latex',\n}\n\nexport interface CrepeFeatureConfig {\n  [CrepeFeature.Cursor]?: CursorFeatureConfig\n  [CrepeFeature.ListItem]?: ListItemFeatureConfig\n  [CrepeFeature.LinkTooltip]?: LinkTooltipFeatureConfig\n  [CrepeFeature.ImageBlock]?: ImageBlockFeatureConfig\n  [CrepeFeature.BlockEdit]?: BlockEditFeatureConfig\n  [CrepeFeature.Placeholder]?: PlaceHolderFeatureConfig\n  [CrepeFeature.Toolbar]?: ToolbarFeatureConfig\n  [CrepeFeature.CodeMirror]?: CodeMirrorFeatureConfig\n  [CrepeFeature.Table]?: TableFeatureConfig\n  [CrepeFeature.Latex]?: LatexFeatureConfig\n}\n\nexport const defaultFeatures: Record<CrepeFeature, boolean> = {\n  [CrepeFeature.Cursor]: true,\n  [CrepeFeature.ListItem]: true,\n  [CrepeFeature.LinkTooltip]: true,\n  [CrepeFeature.ImageBlock]: true,\n  [CrepeFeature.BlockEdit]: true,\n  [CrepeFeature.Placeholder]: true,\n  [CrepeFeature.Toolbar]: true,\n  [CrepeFeature.CodeMirror]: true,\n  [CrepeFeature.Table]: true,\n  [CrepeFeature.Latex]: true,\n}\n\nexport async function loadFeature(\n  feature: CrepeFeature,\n  editor: Editor,\n  config?: never\n) {\n  switch (feature) {\n    case CrepeFeature.CodeMirror: {\n      const { defineFeature } = await import('./code-mirror')\n      return defineFeature(editor, config)\n    }\n    case CrepeFeature.ListItem: {\n      const { defineFeature } = await import('./list-item')\n      return defineFeature(editor, config)\n    }\n    case CrepeFeature.LinkTooltip: {\n      const { defineFeature } = await import('./link-tooltip')\n      return defineFeature(editor, config)\n    }\n    case CrepeFeature.ImageBlock: {\n      const { defineFeature } = await import('./image-block')\n      return defineFeature(editor, config)\n    }\n    case CrepeFeature.Cursor: {\n      const { defineFeature } = await import('./cursor')\n      return defineFeature(editor, config)\n    }\n    case CrepeFeature.BlockEdit: {\n      const { defineFeature } = await import('./block-edit')\n      return defineFeature(editor, config)\n    }\n    case CrepeFeature.Placeholder: {\n      const { defineFeature } = await import('./placeholder')\n      return defineFeature(editor, config)\n    }\n    case CrepeFeature.Toolbar: {\n      const { defineFeature } = await import('./toolbar')\n      return defineFeature(editor, config)\n    }\n    case CrepeFeature.Table: {\n      const { defineFeature } = await import('./table')\n      return defineFeature(editor, config)\n    }\n    case CrepeFeature.Latex: {\n      const { defineFeature } = await import('./latex')\n      return defineFeature(editor, config)\n    }\n  }\n}\n","import type { Ctx } from '@milkdown/kit/ctx'\n\nimport { createSlice } from '@milkdown/kit/ctx'\n\nimport type { CrepeFeature } from '../feature'\nimport type { Crepe } from './crepe'\n\nexport const FeaturesCtx = createSlice([] as CrepeFeature[], 'FeaturesCtx')\n\nexport const crepeCtx = createSlice({} as Crepe, 'CrepeCtx')\n\nexport function configureFeatures(features: CrepeFeature[]) {\n  return (ctx: Ctx) => {\n    ctx.inject(FeaturesCtx, features)\n  }\n}\n","import type { DefaultValue } from '@milkdown/kit/core'\nimport type { ListenerManager } from '@milkdown/kit/plugin/listener'\n\nimport {\n  Editor,\n  EditorStatus,\n  defaultValueCtx,\n  editorViewCtx,\n  editorViewOptionsCtx,\n  rootCtx,\n} from '@milkdown/kit/core'\nimport { clipboard } from '@milkdown/kit/plugin/clipboard'\nimport { history } from '@milkdown/kit/plugin/history'\nimport { indent, indentConfig } from '@milkdown/kit/plugin/indent'\nimport { listener, listenerCtx } from '@milkdown/kit/plugin/listener'\nimport { trailing } from '@milkdown/kit/plugin/trailing'\nimport { commonmark } from '@milkdown/kit/preset/commonmark'\nimport { gfm } from '@milkdown/kit/preset/gfm'\nimport { getMarkdown } from '@milkdown/kit/utils'\n\nimport type { CrepeFeatureConfig } from '../feature'\n\nimport { CrepeFeature, defaultFeatures, loadFeature } from '../feature'\nimport { configureFeatures, crepeCtx } from './slice'\n\nexport interface CrepeConfig {\n  features?: Partial<Record<CrepeFeature, boolean>>\n  featureConfigs?: CrepeFeatureConfig\n  root?: Node | string | null\n  defaultValue?: DefaultValue\n}\n\nexport class Crepe {\n  static Feature = CrepeFeature\n  readonly #editor: Editor\n  readonly #initPromise: Promise<unknown>\n  readonly #rootElement: Node\n  #editable = true\n\n  constructor({\n    root,\n    features = {},\n    featureConfigs = {},\n    defaultValue = '',\n  }: CrepeConfig) {\n    const enabledFeatures = Object.entries({\n      ...defaultFeatures,\n      ...features,\n    })\n      .filter(([, enabled]) => enabled)\n      .map(([feature]) => feature as CrepeFeature)\n\n    this.#rootElement =\n      (typeof root === 'string' ? document.querySelector(root) : root) ??\n      document.body\n    this.#editor = Editor.make()\n      .config((ctx) => {\n        ctx.inject(crepeCtx, this)\n      })\n      .config(configureFeatures(enabledFeatures))\n      .config((ctx) => {\n        ctx.set(rootCtx, this.#rootElement)\n        ctx.set(defaultValueCtx, defaultValue)\n        ctx.set(editorViewOptionsCtx, {\n          editable: () => this.#editable,\n        })\n        ctx.update(indentConfig.key, (value) => ({\n          ...value,\n          size: 4,\n        }))\n      })\n      .use(commonmark)\n      .use(listener)\n      .use(history)\n      .use(indent)\n      .use(trailing)\n      .use(clipboard)\n      .use(gfm)\n\n    const promiseList: Promise<unknown>[] = []\n\n    enabledFeatures.forEach((feature) => {\n      const config = (featureConfigs as Partial<Record<CrepeFeature, never>>)[\n        feature\n      ]\n      promiseList.push(loadFeature(feature, this.#editor, config))\n    })\n\n    this.#initPromise = Promise.all(promiseList)\n  }\n\n  create = async () => {\n    await this.#initPromise\n    return this.#editor.create()\n  }\n\n  destroy = async () => {\n    await this.#initPromise\n    return this.#editor.destroy()\n  }\n\n  get editor(): Editor {\n    return this.#editor\n  }\n\n  setReadonly = (value: boolean) => {\n    this.#editable = !value\n    this.#editor.action((ctx) => {\n      const view = ctx.get(editorViewCtx)\n      view.setProps({\n        editable: () => !value,\n      })\n    })\n    return this\n  }\n\n  getMarkdown = () => {\n    return this.#editor.action(getMarkdown())\n  }\n\n  on = (fn: (api: ListenerManager) => void) => {\n    if (this.#editor.status !== EditorStatus.Created) {\n      this.#editor.config((ctx) => {\n        const listener = ctx.get(listenerCtx)\n        fn(listener)\n      })\n      return this\n    }\n    this.#editor.action((ctx) => {\n      const listener = ctx.get(listenerCtx)\n      fn(listener)\n    })\n    return this\n  }\n}\n"],"names":["CrepeFeature","createSlice","editorViewCtx","getMarkdown","EditorStatus","listener","listenerCtx","Editor","rootCtx","defaultValueCtx","editorViewOptionsCtx","indentConfig","commonmark","history","indent","trailing","clipboard","gfm"],"mappings":"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"}