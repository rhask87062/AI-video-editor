{
  "version": 3,
  "sources": ["../../@milkdown/react/src/use-get-editor.ts", "../../@milkdown/react/src/editor.tsx", "../../@milkdown/react/src/use-editor.ts", "../../@milkdown/react/src/use-instance.ts"],
  "sourcesContent": ["import { createContext, useContext, useEffect, useRef } from 'react'\n\nimport type { EditorInfoCtx } from './types'\n\nexport const editorInfoContext = createContext<EditorInfoCtx>(\n  {} as EditorInfoCtx\n)\n\nexport function useGetEditor() {\n  const {\n    dom,\n    editor: editorRef,\n    setLoading,\n    editorFactory: getEditor,\n  } = useContext(editorInfoContext)\n  const domRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const div = domRef.current\n\n    if (!getEditor) return\n\n    if (!div) return\n\n    dom.current = div\n\n    const editor = getEditor(div)\n    if (!editor) return\n\n    setLoading(true)\n    editor\n      .create()\n      .then((editor) => {\n        editorRef.current = editor\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n      .catch(console.error)\n\n    return () => {\n      editor.destroy().catch(console.error)\n    }\n  }, [dom, editorRef, getEditor, setLoading])\n\n  return domRef\n}\n", "import type { Editor } from '@milkdown/kit/core'\nimport type { FC, ReactNode } from 'react'\n\nimport React, { useMemo, useRef, useState } from 'react'\n\nimport type { EditorInfoCtx, GetEditor } from './types'\n\nimport { editorInfoContext, useGetEditor } from './use-get-editor'\n\nexport const Milkdown: FC = () => {\n  const domRef = useGetEditor()\n\n  return <div data-milkdown-root ref={domRef} />\n}\n\nexport const MilkdownProvider: FC<{ children: ReactNode }> = ({ children }) => {\n  const dom = useRef<HTMLDivElement | undefined>(undefined)\n  const [editorFactory, setEditorFactory] = useState<GetEditor | undefined>(\n    undefined\n  )\n  const editor = useRef<Editor | undefined>(undefined)\n  const [loading, setLoading] = useState(true)\n\n  const editorInfoCtx = useMemo<EditorInfoCtx>(\n    () => ({\n      loading,\n      dom,\n      editor,\n      setLoading,\n      editorFactory,\n      setEditorFactory,\n    }),\n    [loading, editorFactory]\n  )\n\n  return (\n    <editorInfoContext.Provider value={editorInfoCtx}>\n      {children}\n    </editorInfoContext.Provider>\n  )\n}\n", "import type { DependencyList } from 'react'\n\nimport { useCallback, useContext, useLayoutEffect } from 'react'\n\nimport type { GetEditor, UseEditorReturn } from './types'\n\nimport { editorInfoContext } from './use-get-editor'\n\nexport function useEditor(\n  getEditor: GetEditor,\n  deps: DependencyList = []\n): UseEditorReturn {\n  const editorInfo = useContext(editorInfoContext)\n\n  const factory = useCallback(getEditor, deps)\n\n  useLayoutEffect(() => {\n    editorInfo.setEditorFactory(() => factory)\n  }, [editorInfo, factory])\n\n  return {\n    loading: editorInfo.loading,\n    get: () => editorInfo.editor.current,\n  }\n}\n", "import type { Editor } from '@milkdown/kit/core'\n\nimport { useCallback, useContext } from 'react'\n\nimport { editorInfoContext } from './use-get-editor'\n\nexport type Instance = [true, () => undefined] | [false, () => Editor]\n\nexport function useInstance() {\n  const editorInfo = useContext(editorInfoContext)\n\n  const getInstance = useCallback(() => {\n    return editorInfo.editor.current\n  }, [editorInfo.editor])\n\n  return [editorInfo.loading, getInstance] as Instance\n}\n"],
  "mappings": ";;;;;;;;;AAIO,IAAM,wBAAoB;EAC/B,CAAA;AACF;AAEO,SAAS,eAAe;AACvB,QAAA;IACJ;IACA,QAAQ;IACR;IACA,eAAe;EAAA,QACb,yBAAW,iBAAiB;AAC1B,QAAA,aAAS,qBAAuB,IAAI;AAE1C,8BAAU,MAAM;AACd,UAAM,MAAM,OAAO;AAEnB,QAAI,CAAC,UAAW;AAEhB,QAAI,CAAC,IAAK;AAEV,QAAI,UAAU;AAER,UAAA,SAAS,UAAU,GAAG;AAC5B,QAAI,CAAC,OAAQ;AAEb,eAAW,IAAI;AACf,WACG,OAAO,EACP,KAAK,CAACA,YAAW;AAChB,gBAAU,UAAUA;IAAA,CACrB,EACA,QAAQ,MAAM;AACb,iBAAW,KAAK;IAAA,CACjB,EACA,MAAM,QAAQ,KAAK;AAEtB,WAAO,MAAM;AACX,aAAO,QAAQ,EAAE,MAAM,QAAQ,KAAK;IACtC;EAAA,GACC,CAAC,KAAK,WAAW,WAAW,UAAU,CAAC;AAEnC,SAAA;AACT;ACrCO,IAAM,WAAe,MAAM;AAChC,QAAM,SAAS,aAAa;AAE5B,SAAQ,aAAAC,QAAA,cAAA,OAAA,EAAI,sBAAkB,MAAC,KAAK,OAAA,CAAQ;AAC9C;AAEO,IAAM,mBAAgD,CAAC,EAAE,SAAA,MAAe;AACvE,QAAA,UAAM,qBAAmC,MAAS;AAClD,QAAA,CAAC,eAAe,gBAAgB,QAAI;IACxC;EACF;AACM,QAAA,aAAS,qBAA2B,MAAS;AACnD,QAAM,CAAC,SAAS,UAAU,QAAI,uBAAS,IAAI;AAE3C,QAAM,oBAAgB;IACpB,OAAO;MACL;MACA;MACA;MACA;MACA;MACA;IAAA;IAEF,CAAC,SAAS,aAAa;EACzB;AAEA,SAAA,aAAAA,QAAA,cACG,kBAAkB,UAAlB,EAA2B,OAAO,cAAA,GAChC,QACH;AAEJ;AChCO,SAAS,UACd,WACA,OAAuB,CAAA,GACN;AACX,QAAA,iBAAa,yBAAW,iBAAiB;AAEzC,QAAA,cAAU,0BAAY,WAAW,IAAI;AAE3C,oCAAgB,MAAM;AACT,eAAA,iBAAiB,MAAM,OAAO;EAAA,GACxC,CAAC,YAAY,OAAO,CAAC;AAEjB,SAAA;IACL,SAAS,WAAW;IACpB,KAAK,MAAM,WAAW,OAAO;EAC/B;AACF;AChBO,SAAS,cAAc;AACtB,QAAA,iBAAa,yBAAW,iBAAiB;AAEzC,QAAA,kBAAc,0BAAY,MAAM;AACpC,WAAO,WAAW,OAAO;EAAA,GACxB,CAAC,WAAW,MAAM,CAAC;AAEf,SAAA,CAAC,WAAW,SAAS,WAAW;AACzC;",
  "names": ["editor", "React"]
}
