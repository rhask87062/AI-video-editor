import {
  require_react
} from "./chunk-RLJ2RCJQ.js";
import {
  __toESM
} from "./chunk-DC5AMYBS.js";

// node_modules/@milkdown/react/lib/index.js
var import_react = __toESM(require_react());
var editorInfoContext = (0, import_react.createContext)(
  {}
);
function useGetEditor() {
  const {
    dom,
    editor: editorRef,
    setLoading,
    editorFactory: getEditor
  } = (0, import_react.useContext)(editorInfoContext);
  const domRef = (0, import_react.useRef)(null);
  (0, import_react.useEffect)(() => {
    const div = domRef.current;
    if (!getEditor) return;
    if (!div) return;
    dom.current = div;
    const editor = getEditor(div);
    if (!editor) return;
    setLoading(true);
    editor.create().then((editor2) => {
      editorRef.current = editor2;
    }).finally(() => {
      setLoading(false);
    }).catch(console.error);
    return () => {
      editor.destroy().catch(console.error);
    };
  }, [dom, editorRef, getEditor, setLoading]);
  return domRef;
}
var Milkdown = () => {
  const domRef = useGetEditor();
  return import_react.default.createElement("div", { "data-milkdown-root": true, ref: domRef });
};
var MilkdownProvider = ({ children }) => {
  const dom = (0, import_react.useRef)(void 0);
  const [editorFactory, setEditorFactory] = (0, import_react.useState)(
    void 0
  );
  const editor = (0, import_react.useRef)(void 0);
  const [loading, setLoading] = (0, import_react.useState)(true);
  const editorInfoCtx = (0, import_react.useMemo)(
    () => ({
      loading,
      dom,
      editor,
      setLoading,
      editorFactory,
      setEditorFactory
    }),
    [loading, editorFactory]
  );
  return import_react.default.createElement(editorInfoContext.Provider, { value: editorInfoCtx }, children);
};
function useEditor(getEditor, deps = []) {
  const editorInfo = (0, import_react.useContext)(editorInfoContext);
  const factory = (0, import_react.useCallback)(getEditor, deps);
  (0, import_react.useLayoutEffect)(() => {
    editorInfo.setEditorFactory(() => factory);
  }, [editorInfo, factory]);
  return {
    loading: editorInfo.loading,
    get: () => editorInfo.editor.current
  };
}
function useInstance() {
  const editorInfo = (0, import_react.useContext)(editorInfoContext);
  const getInstance = (0, import_react.useCallback)(() => {
    return editorInfo.editor.current;
  }, [editorInfo.editor]);
  return [editorInfo.loading, getInstance];
}
export {
  Milkdown,
  MilkdownProvider,
  useEditor,
  useInstance
};
//# sourceMappingURL=@milkdown_react.js.map
